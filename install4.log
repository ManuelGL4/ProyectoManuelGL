<!DOCTYPE HTML>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Dolibarr installer">
<link rel="stylesheet" type="text/css" href="default.css">
<!-- Includes CSS for JQuery -->
<link rel="stylesheet" type="text/css" href="../includes/jquery/css/base/jquery-ui.min.css" />
<!-- Includes JS for JQuery -->
<script type="text/javascript" src="../includes/jquery/js/jquery.min.js"></script>
<script type="text/javascript" src="../includes/jquery/js/jquery-ui.min.js"></script>
<title>Dolibarr install or upgrade</title>
</head>
<body>
<div class="divlogoinstall" style="text-align:center"><img class="imglogoinstall" src="../theme/dolibarr_logo.svg" alt="Dolibarr logo" width="300px"><br>14.0.2</div><br><span class="titre">Dolibarr install or upgrade</span>
<form name="forminstall" style="width: 100%" action="upgrade2.php?versionfrom=13.0.0&versionto=14.0.0" method="POST">
<input type="hidden" name="testpost" value="ok">
<input type="hidden" name="action" value="upgrade">
<table class="main" width="100%"><tr><td>
<table class="main-inside" width="100%"><tr><td>
<h3><img class="valignmiddle inline-block paddingright" src="../theme/common/octicons/build/svg/database.svg" width="20" alt="Database"> <span class="inline-block">Database migration (structure + some data)</span></h3><table cellspacing="0" cellpadding="1" border="0" width="100%"><tr><td class="nowrap">Server connection : db5005135846.hosting-data.io</td><td class="right"><span class="neutral">OK</span></td></tr>
<tr><td class="nowrap">Database connection : dbs4297934</td><td class="right"><span class="neutral">OK</span></td></tr>
<tr><td>Database server version</td><td class="right">5.7.33-log</td></tr><tr><td>Client charset</td><td class="right">utf8</td></tr><tr><td>Client collation</td><td class="right">utf8_general_ci</td></tr><tr><td colspan="2">Please be patient...</td></tr><tr><td colspan="2"><hr style="border-color: #ccc; border-top-style: none;"></td></tr><tr><td class="nowrap">Choose migration script</td><td class="right">13.0.0-14.0.0.sql</td></tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 1 sql='SET sql_mode = 'ALLOW_INVALID_DATES';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 2 sql='update khns_propal set tms = datec where DATE(STR_TO_DATE(tms, '%Y-%m-%d')) IS NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 3 sql='SET sql_mode = 'NO_ZERO_DATE';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 4 sql='update khns_propal set tms = null where DATE(STR_TO_DATE(tms, '%Y-%m-%d')) IS NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 5 sql='ALTER TABLE khns_ecm_files ADD COLUMN note_private text AFTER fk_user_m;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 6 sql='ALTER TABLE khns_ecm_files ADD COLUMN note_public text AFTER note_private;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 7 sql='ALTER TABLE khns_accounting_bookkeeping DROP INDEX idx_accounting_bookkeeping_numero_compte;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 8 sql='ALTER TABLE khns_accounting_bookkeeping DROP INDEX idx_accounting_bookkeeping_code_journal;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 9 sql='ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_fk_docdet (fk_docdet);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 10 sql='ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_doc_date (doc_date);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 11 sql='ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_numero_compte (numero_compte, entity);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 12 sql='ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_code_journal (code_journal, entity);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 13 sql='ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_piece_num (piece_num, entity);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 14 sql='ALTER TABLE khns_recruitment_recruitmentcandidature MODIFY COLUMN email_msgid VARCHAR(175);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 15 sql='ALTER TABLE khns_asset CHANGE COLUMN amount amount_ht double(24,8) DEFAULT NULL;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 16 sql='ALTER TABLE khns_asset ADD COLUMN amount_vat double(24,8) DEFAULT NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 17 sql='ALTER TABLE khns_supplier_proposal_extrafields ADD INDEX idx_supplier_proposal_extrafields (fk_object);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 18 sql='ALTER TABLE khns_supplier_proposaldet_extrafields ADD INDEX idx_supplier_proposaldet_extrafields (fk_object);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 19 sql='ALTER TABLE khns_asset_extrafields ADD INDEX idx_asset_extrafields (fk_object);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 20 sql='insert into khns_c_actioncomm (id, code, type, libelle, module, active, position) values ( 6,'AC_EMAIL_IN','system','reception Email',NULL, 1, 4);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 21 sql='ALTER TABLE khns_accounting_bookkeeping MODIFY COLUMN montant double(24,8) NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 22 sql='UPDATE khns_c_country SET eec = 1 WHERE code IN ('AT','BE','BG','CY','CZ','DE','DK','EE','ES','FI','FR','GR','HR','NL','HU','IE','IM','IT','LT','LU','LV','MC','MT','PL','PT','RO','SE','SK','SI');'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 23 sql='INSERT INTO khns_accounting_system (fk_country, pcg_version, label, active) VALUES (  11, 'US-BASE', 'USA basic chart of accounts', 1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 24 sql='INSERT INTO khns_accounting_system (fk_country, pcg_version, label, active) VALUES ( 14, 'CA-ENG-BASE', 'Canadian basic chart of accounts - English', 1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 25 sql='INSERT INTO khns_accounting_system (fk_country, pcg_version, label, active) VALUES ( 154, 'SAT/24-2019', 'Catalogo y codigo agrupador fiscal del 2019', 1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 26 sql='UPDATE khns_const set value = __ENCRYPT('eldy')__ WHERE __DECRYPT('value')__ = 'auguria';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 27 sql='UPDATE khns_const set value = __ENCRYPT('eldy')__ WHERE __DECRYPT('value')__ = 'bureau2crea';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 28 sql='UPDATE khns_const set value = __ENCRYPT('eldy')__ WHERE __DECRYPT('value')__ = 'amarok';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 29 sql='UPDATE khns_const set value = __ENCRYPT('eldy')__ WHERE __DECRYPT('value')__ = 'cameleo';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 30 sql='DELETE FROM khns_user_param where param = 'MAIN_THEME' and value in ('auguria', 'amarok', 'cameleo');'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 31 sql='UPDATE khns_c_ticket_type set label = 'Issue or bug' WHERE code = 'ISSUE';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 32 sql='INSERT INTO khns_c_ticket_type (code, pos, label, active, use_default, description) VALUES('PROBLEM', '22', 'Problem', 0, 0, NULL);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 33 sql='ALTER TABLE khns_import_model MODIFY COLUMN type varchar(64);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 34 sql='ALTER TABLE khns_export_model MODIFY COLUMN type varchar(64);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 35 sql='ALTER TABLE khns_import_model ADD COLUMN entity integer DEFAULT 0 NOT NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 36 sql='ALTER TABLE khns_export_model ADD COLUMN entity integer DEFAULT 0 NOT NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 37 sql='ALTER TABLE khns_product_lot ADD COLUMN eol_date datetime NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 38 sql='ALTER TABLE khns_product_lot ADD COLUMN manufacturing_date datetime NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 39 sql='ALTER TABLE khns_product_lot ADD COLUMN scrapping_date datetime NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 40 sql='create table khns_accounting_groups_account(rowid            integer AUTO_INCREMENT PRIMARY KEY,fk_accounting_account		INTEGER NOT NULL,fk_c_accounting_category	INTEGER NOT NULL)ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 41 sql='ALTER TABLE khns_oauth_token ADD COLUMN restricted_ips varchar(200);'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 42 sql='ALTER TABLE khns_oauth_token ADD COLUMN datec datetime DEFAULT NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 43 sql='ALTER TABLE khns_oauth_token ADD COLUMN tms timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 44 sql='ALTER TABLE khns_events ADD COLUMN authentication_method varchar(64) NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 45 sql='ALTER TABLE khns_events ADD COLUMN fk_oauth_token integer NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 46 sql='ALTER TABLE khns_mailing_cibles MODIFY COLUMN tag varchar(64) NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 47 sql='ALTER TABLE khns_mailing_cibles ADD INDEX idx_mailing_cibles_tag (tag);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 48 sql='ALTER TABLE khns_c_availability ADD COLUMN position integer NOT NULL DEFAULT 0;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 49 sql='ALTER TABLE khns_adherent ADD COLUMN ref varchar(30) AFTER rowid;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 50 sql='UPDATE khns_adherent SET ref = rowid WHERE ref = '' or ref IS NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 51 sql='ALTER TABLE khns_adherent MODIFY COLUMN ref varchar(30) NOT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 52 sql='ALTER TABLE khns_adherent ADD UNIQUE INDEX uk_adherent_ref (ref, entity);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 53 sql='ALTER TABLE khns_societe ADD COLUMN accountancy_code_sell varchar(32) AFTER webservices_key;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 54 sql='ALTER TABLE khns_societe ADD COLUMN accountancy_code_buy varchar(32) AFTER accountancy_code_sell;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 55 sql='ALTER TABLE khns_bank_account ADD COLUMN ics varchar(32) NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 56 sql='ALTER TABLE khns_bank_account ADD COLUMN ics_transfer varchar(32) NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 57 sql='ALTER TABLE khns_facture MODIFY COLUMN date_valid DATETIME NULL DEFAULT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 58 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_dolibarr_state_board.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_dolibarr_state_board.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 59 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_members_last_modified.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_members_last_modified.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 60 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_members_last_subscriptions.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_members_last_subscriptions.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 61 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_members_subscriptions_by_year.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_members_subscriptions_by_year.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 62 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_members_by_type.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_members_by_type.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 63 sql='ALTER TABLE khns_website ADD COLUMN lastaccess datetime NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 64 sql='ALTER TABLE khns_website ADD COLUMN pageviews_month BIGINT UNSIGNED DEFAULT 0;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 65 sql='ALTER TABLE khns_website ADD COLUMN pageviews_total BIGINT UNSIGNED DEFAULT 0;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 66 sql='ALTER TABLE khns_workstation_workstation DROP FOREIGN KEY khns_workstation_workstation_fk_user_creat;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 67 sql='ALTER TABLE khns_propal DROP FOREIGN KEY khns_propal_fk_warehouse;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 68 sql='CREATE TABLE khns_workstation_workstation(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,ref varchar(128) DEFAULT '(PROV)' NOT NULL,label varchar(255),type varchar(7),note_public text,entity int DEFAULT 1,note_private text,date_creation datetime NOT NULL,tms timestamp,fk_user_creat integer NOT NULL,fk_user_modif integer,import_key varchar(14),status smallint NOT NULL,nb_operators_required integer,thm_operator_estimated double,thm_machine_estimated double) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 69 sql='ALTER TABLE khns_workstation_workstation ADD INDEX idx_workstation_workstation_rowid (rowid);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 70 sql='ALTER TABLE khns_workstation_workstation ADD INDEX idx_workstation_workstation_ref (ref);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 71 sql='ALTER TABLE khns_workstation_workstation ADD CONSTRAINT fk_workstation_workstation_fk_user_creat FOREIGN KEY (fk_user_creat) REFERENCES khns_user(rowid);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 72 sql='ALTER TABLE khns_workstation_workstation ADD INDEX idx_workstation_workstation_status (status);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 73 sql='CREATE TABLE khns_workstation_workstation_resource(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,tms timestamp,fk_resource integer,fk_workstation integer) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 74 sql='CREATE TABLE khns_workstation_workstation_usergroup(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,tms timestamp,fk_usergroup integer,fk_workstation integer) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 75 sql='DROP TABLE khns_c_producbatch_qcstatus;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHTABLE -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 76 sql='CREATE TABLE khns_c_productbatch_qcstatus(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,entity   integer NOT NULL DEFAULT 1,code     varchar(16)        NOT NULL,label    varchar(50)        NOT NULL,active   integer  DEFAULT 1 NOT NULL) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 77 sql='ALTER TABLE khns_c_productbatch_qcstatus ADD UNIQUE INDEX uk_c_productbatch_qcstatus(code, entity);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 78 sql='INSERT INTO khns_c_productbatch_qcstatus (code, label, active) VALUES ('OK', 'InWorkingOrder', 1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 79 sql='INSERT INTO khns_c_productbatch_qcstatus (code, label, active) VALUES ('KO', 'OutOfOrder', 1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 80 sql='ALTER TABLE khns_product_customer_price ADD COLUMN ref_customer varchar(30);'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 81 sql='ALTER TABLE khns_product_customer_price_log ADD COLUMN ref_customer varchar(30);'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 82 sql='ALTER TABLE khns_propal ADD COLUMN fk_warehouse integer DEFAULT NULL AFTER fk_shipping_method;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 83 sql='ALTER TABLE khns_propal ADD INDEX idx_propal_fk_warehouse(fk_warehouse);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 84 sql='ALTER TABLE khns_societe DROP INDEX idx_societe_entrepot;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 85 sql='ALTER TABLE khns_societe CHANGE fk_entrepot fk_warehouse INTEGER DEFAULT NULL;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 86 sql='ALTER TABLE khns_societe ADD INDEX idx_societe_warehouse(fk_warehouse);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 87 sql='ALTER TABLE khns_societe MODIFY COLUMN fk_typent integer NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 88 sql='UPDATE khns_societe SET fk_typent=NULL, tms=tms WHERE fk_typent=0;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 89 sql='DELETE FROM khns_c_typent WHERE code='TE_UNKNOWN';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 90 sql='ALTER TABLE khns_socpeople MODIFY poste varchar(255);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 91 sql='ALTER TABLE khns_menu ADD COLUMN prefix varchar(255) NULL AFTER titre;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 92 sql='ALTER TABLE khns_chargesociales ADD COLUMN fk_user integer DEFAULT NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 93 sql='ALTER TABLE khns_mrp_production ADD COLUMN origin_id integer AFTER fk_mo;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 94 sql='ALTER TABLE khns_mrp_production ADD COLUMN origin_type varchar(10) AFTER origin_id;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 95 sql='ALTER TABLE khns_fichinter ADD COLUMN last_main_doc varchar(255) AFTER model_pdf;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 96 sql='ALTER TABLE khns_projet ADD COLUMN last_main_doc varchar(255) AFTER model_pdf;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 97 sql='ALTER TABLE khns_expensereport ADD COLUMN last_main_doc varchar(255) DEFAULT NULL AFTER model_pdf;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 98 sql='create table khns_payment_vat(rowid           integer AUTO_INCREMENT PRIMARY KEY,fk_tva          integer,datec           datetime,tms             timestamp,datep           datetime,amount          double(24,8) DEFAULT 0,fk_typepaiement integer NOT NULL,num_paiement    varchar(50),note            text,fk_bank         integer NOT NULL,fk_user_creat   integer,fk_user_modif   integer)ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 99 sql='ALTER TABLE khns_tva ADD COLUMN paye smallint default 1 NOT NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 100 sql='ALTER TABLE khns_tva ADD COLUMN fk_account integer;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 101 sql='INSERT INTO khns_payment_vat (rowid, fk_tva, datec, datep, amount, fk_typepaiement, num_paiement, note, fk_bank, fk_user_creat, fk_user_modif) SELECT rowid, rowid, NOW(), datep, amount, COALESCE(fk_typepayment, 0), num_payment, 'Created automatically by migration v13 to v14', fk_bank, fk_user_creat, fk_user_modif FROM khns_tva WHERE fk_bank IS NOT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 102 sql='ALTER TABLE khns_tva ALTER COLUMN paye SET DEFAULT 0;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 103 sql='INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationEmailAskConf', 10, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationEmailAskConf)__', '__(Hello)__ __THIRDPARTY_NAME__,&lt;br /&gt;&lt;br /&gt;__(ThisIsContentOfYourOrganizationEventConfRequestWasReceived)__&lt;br /&gt;&lt;br /&gt;__ONLINE_PAYMENT_TEXT_AND_URL__&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;__(Sincerely)__&lt;br /&gt;__USER_SIGNATURE__', null, '1', null);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 104 sql='INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationEmailAskBooth', 20, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationEmailAskBooth)__', '__(Hello)__ __THIRDPARTY_NAME__,&lt;br /&gt;&lt;br /&gt;__(ThisIsContentOfYourOrganizationEventBoothRequestWasReceived)__&lt;br /&gt;&lt;br /&gt;__ONLINE_PAYMENT_TEXT_AND_URL__&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;__(Sincerely)__&lt;br /&gt;__USER_SIGNATURE__', null, '1', null);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 105 sql='INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationEmailSubsBooth', 30, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationEmailSubsBooth)__', '__(Hello)__ __THIRDPARTY_NAME__,&lt;br /&gt;&lt;br /&gt;__(ThisIsContentOfYourOrganizationEventBoothSubscriptionWasReceived)__&lt;br /&gt;&lt;br /&gt;__ONLINE_PAYMENT_TEXT_AND_URL__&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;__(Sincerely)__&lt;br /&gt;__USER_SIGNATURE__', null, '1', null);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 106 sql='INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationEmailSubsEvent', 40, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationEmailSubsEvent)__', '__(Hello)__ __THIRDPARTY_NAME__,&lt;br /&gt;&lt;br /&gt;__(ThisIsContentOfYourOrganizationEventEventSubscriptionWasReceived)__&lt;br /&gt;&lt;br /&gt;__(Sincerely)__&lt;br /&gt;&lt;br /&gt;__MYCOMPANY_NAME__&lt;br /&gt;__USER_SIGNATURE__', null, '1', null);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 107 sql='INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationMassEmailAttendees', 50, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationMassEmailAttendees)__', '__(Hello)__ __THIRDPARTY_NAME__,&lt;br /&gt;&lt;br /&gt;__(ThisIsContentOfYourOrganizationEventBulkMailToAttendees)__&lt;br /&gt;&lt;br /&gt;__(Sincerely)__&lt;br /&gt;__USER_SIGNATURE__', null, '1', null);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 108 sql='INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationMassEmailSpeakers', 60, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationMassEmailSpeakers)__', '__(Hello)__ __THIRDPARTY_NAME__,&lt;br /&gt;&lt;br /&gt;__(ThisIsContentOfYourOrganizationEventBulkMailToSpeakers)__&lt;br /&gt;&lt;br /&gt;__(Sincerely)__&lt;br /&gt;__USER_SIGNATURE__', null, '1', null);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 109 sql='ALTER TABLE khns_projet ADD COLUMN accept_conference_suggestions integer DEFAULT 0;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 110 sql='ALTER TABLE khns_projet ADD COLUMN accept_booth_suggestions integer DEFAULT 0;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 111 sql='ALTER TABLE khns_projet ADD COLUMN price_registration double(24,8);'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 112 sql='ALTER TABLE khns_projet ADD COLUMN price_booth double(24,8);'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 113 sql='ALTER TABLE khns_actioncomm ADD COLUMN num_vote integer DEFAULT NULL AFTER reply_to;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 114 sql='ALTER TABLE khns_actioncomm ADD COLUMN event_paid smallint NOT NULL DEFAULT 0 AFTER num_vote;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 115 sql='ALTER TABLE khns_actioncomm ADD COLUMN status smallint NOT NULL DEFAULT 0 AFTER event_paid;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 116 sql='ALTER TABLE khns_actioncomm ADD COLUMN ref varchar(30) AFTER id;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 117 sql='UPDATE khns_actioncomm SET ref = id WHERE ref = '' OR ref IS NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 118 sql='ALTER TABLE khns_actioncomm MODIFY COLUMN ref varchar(30) NOT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 119 sql='ALTER TABLE khns_actioncomm ADD UNIQUE INDEX uk_actioncomm_ref (ref, entity);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 120 sql='ALTER TABLE khns_c_actioncomm MODIFY code varchar(50) NOT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 121 sql='ALTER TABLE khns_c_actioncomm MODIFY module varchar(50) DEFAULT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 122 sql='INSERT INTO khns_c_actioncomm (id, code, type, libelle, module, active, position) VALUES ( 60,'AC_EO_ONLINECONF','module','Online/Virtual conference','conference@eventorganization', 1, 60);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 123 sql='INSERT INTO khns_c_actioncomm (id, code, type, libelle, module, active, position) VALUES ( 61,'AC_EO_INDOORCONF','module','Indoor conference','conference@eventorganization', 1, 61);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 124 sql='INSERT INTO khns_c_actioncomm (id, code, type, libelle, module, active, position) VALUES ( 62,'AC_EO_ONLINEBOOTH','module','Online/Virtual booth','booth@eventorganization', 1, 62);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 125 sql='INSERT INTO khns_c_actioncomm (id, code, type, libelle, module, active, position) VALUES ( 63,'AC_EO_INDOORBOOTH','module','Indoor booth','booth@eventorganization', 1, 63);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 126 sql='ALTER TABLE khns_commande CHANGE COLUMN tva total_tva double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 127 sql='ALTER TABLE khns_supplier_proposal CHANGE COLUMN tva total_tva double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 128 sql='ALTER TABLE khns_supplier_proposal CHANGE COLUMN total total_ttc double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 129 sql='ALTER TABLE khns_propal CHANGE COLUMN tva total_tva double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 130 sql='ALTER TABLE khns_propal CHANGE COLUMN total total_ttc double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 131 sql='ALTER TABLE khns_facture CHANGE COLUMN tva total_tva double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 132 sql='ALTER TABLE khns_facture CHANGE COLUMN total total_ht double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 133 sql='ALTER TABLE khns_facture_rec CHANGE COLUMN tva total_tva double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 134 sql='ALTER TABLE khns_facture_rec CHANGE COLUMN total total_ht double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 135 sql='ALTER TABLE khns_commande_fournisseur CHANGE COLUMN tva total_tva double(24,8) default 0;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 136 sql='create table khns_salary(rowid           integer AUTO_INCREMENT PRIMARY KEY,ref             varchar(30) NULL,label           varchar(255),tms             timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,datec           datetime,fk_user         integer NOT NULL,datep           date,datev           date,salary          double(24,8),amount          double(24,8) NOT NULL DEFAULT 0,fk_projet       integer DEFAULT NULL,datesp          date,dateep          date,entity          integer DEFAULT 1 NOT NULL,note            text,fk_bank         integer,paye            smallint default 1 NOT NULL,fk_typepayment  integer NOT NULL,fk_account      integer,fk_user_author  integer,fk_user_modif   integer) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 137 sql='ALTER TABLE khns_payment_salary CHANGE COLUMN fk_user fk_user integer NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 138 sql='ALTER TABLE khns_payment_salary ADD COLUMN fk_salary integer;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 139 sql='INSERT INTO khns_salary (rowid, ref, fk_user, amount, fk_projet, fk_typepayment, label, datesp, dateep, entity, note, fk_bank, paye) SELECT ps.rowid, ps.rowid, ps.fk_user, ps.amount, ps.fk_projet, ps.fk_typepayment, ps.label, ps.datesp, ps.dateep, ps.entity, ps.note, ps.fk_bank, 1 FROM khns_payment_salary ps WHERE ps.fk_salary IS NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 140 sql='UPDATE khns_payment_salary SET fk_salary = rowid WHERE fk_salary IS NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 141 sql='UPDATE khns_payment_salary SET ref = rowid WHERE ref IS NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 142 sql='ALTER TABLE khns_salary ALTER COLUMN paye set default 0;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 143 sql='UPDATE khns_extrafields SET elementtype = 'salary' WHERE elementtype = 'payment_salary';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 144 sql='ALTER TABLE khns_payment_salary_extrafields RENAME TO khns_salary_extrafields;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 145 sql='DROP INDEX idx_payment_salary_extrafields on khns_salary_extrafields;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 146 sql='ALTER TABLE khns_salary_extrafields ADD INDEX idx_salary_extrafields (fk_object);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 147 sql='DELETE FROM khns_boxes WHERE box_id IN (SELECT rowid FROM khns_boxes_def WHERE file IN ('box_graph_ticket_by_severity', 'box_ticket_by_severity.php', 'box_nb_ticket_last_x_days.php', 'box_nb_tickets_type.php', 'box_new_vs_close_ticket.php'));'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 148 sql='DELETE FROM khns_boxes_def WHERE file IN ('box_graph_ticket_by_severity', 'box_ticket_by_severity.php', 'box_nb_ticket_last_x_days.php', 'box_nb_tickets_type.php', 'box_new_vs_close_ticket.php');'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 149 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_graph_ticket_by_severity.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_graph_ticket_by_severity.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 150 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_graph_nb_ticket_last_x_days.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_graph_nb_ticket_last_x_days.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 151 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_graph_nb_tickets_type.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_graph_nb_tickets_type.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 152 sql='INSERT INTO khns_boxes_def (file, entity) SELECT  'box_graph_new_vs_close_ticket.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_graph_new_vs_close_ticket.php' AND entity = 1);'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 153 sql='create table khns_product_perentity(rowid         				integer AUTO_INCREMENT PRIMARY KEY,fk_product	   				integer,entity             			integer DEFAULT 1 NOT NULL,accountancy_code_sell         varchar(32),accountancy_code_sell_intra   varchar(32),accountancy_code_sell_export  varchar(32),accountancy_code_buy          varchar(32),accountancy_code_buy_intra    varchar(32),accountancy_code_buy_export   varchar(32),pmp double(24,8))ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 154 sql='ALTER TABLE khns_product_perentity ADD INDEX idx_product_perentity_fk_product (fk_product);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 155 sql='ALTER TABLE khns_product_perentity ADD UNIQUE INDEX uk_product_perentity (fk_product, entity);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 156 sql='create table khns_societe_perentity(rowid         			integer AUTO_INCREMENT PRIMARY KEY,fk_soc        			integer,entity             		integer DEFAULT 1 NOT NULL,accountancy_code_sell		varchar(32),accountancy_code_buy		varchar(32))ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 157 sql='ALTER TABLE khns_societe_perentity ADD INDEX idx_societe_perentity_fk_soc (fk_soc);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 158 sql='ALTER TABLE khns_societe_perentity ADD UNIQUE INDEX uk_societe_perentity (fk_soc, entity);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 159 sql='CREATE TABLE khns_eventorganization_conferenceorboothattendee(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,ref varchar(128) NOT NULL,fk_soc integer,fk_actioncomm integer,fk_project integer NOT NULL,email varchar(100),date_subscription datetime,amount double DEFAULT NULL,note_public text,note_private text,date_creation datetime NOT NULL,tms timestamp,fk_user_creat integer,fk_user_modif integer,last_main_doc varchar(255),import_key varchar(14),model_pdf varchar(255),status smallint NOT NULL) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 160 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee MODIFY COLUMN fk_actioncomm integer NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 161 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD COLUMN fk_project integer NOT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 162 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_rowid (rowid);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 163 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_ref (ref);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 164 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_fk_soc (fk_soc);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 165 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_fk_actioncomm (fk_actioncomm);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 166 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD CONSTRAINT fx_eventorganization_conferenceorboothattendee_fk_actioncomm FOREIGN KEY (fk_actioncomm) REFERENCES khns_actioncomm(id);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 167 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_email (email);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 168 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_status (status);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 169 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD UNIQUE INDEX uk_eventorganization_conferenceorboothattendee(fk_soc, fk_actioncomm, email);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 170 sql='create table khns_eventorganization_conferenceorboothattendee_extrafields(rowid                     integer AUTO_INCREMENT PRIMARY KEY,tms                       timestamp,fk_object                 integer NOT NULL,import_key                varchar(14)) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 171 sql='ALTER TABLE khns_eventorganization_conferenceorboothattendee_extrafields ADD INDEX idx_conferenceorboothattendee_fk_object(fk_object);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 172 sql='ALTER TABLE khns_c_ticket_category ADD COLUMN public integer DEFAULT 0;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 173 sql='ALTER TABLE khns_c_ticket_category MODIFY COLUMN pos	integer DEFAULT 0 NOT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 174 sql='ALTER TABLE khns_propal ADD COLUMN date_signature datetime AFTER date_valid;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 175 sql='ALTER TABLE khns_propal ADD COLUMN fk_user_signature integer AFTER fk_user_valid;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 176 sql='ALTER TABLE khns_propal ADD CONSTRAINT fk_propal_fk_user_signature FOREIGN KEY (fk_user_signature) REFERENCES khns_user (rowid);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 177 sql='UPDATE khns_propal SET fk_user_signature = fk_user_cloture WHERE fk_user_signature IS NULL AND fk_user_cloture IS NOT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 178 sql='UPDATE khns_propal SET date_signature = date_cloture WHERE date_signature IS NULL AND date_cloture IS NOT NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 179 sql='ALTER TABLE khns_product ADD COLUMN batch_mask VARCHAR(32) DEFAULT NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 180 sql='ALTER TABLE khns_product ADD COLUMN lifetime INTEGER NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 181 sql='ALTER TABLE khns_product ADD COLUMN qc_frequency INTEGER NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 182 sql='insert into khns_c_type_contact(rowid, element, source, code, libelle, active ) values (210, 'conferenceorbooth', 'internal', 'MANAGER',  'Conference or Booth manager', 1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 183 sql='insert into khns_c_type_contact(rowid, element, source, code, libelle, active ) values (211, 'conferenceorbooth', 'external', 'SPEAKER',   'Conference Speaker', 1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 184 sql='insert into khns_c_type_contact(rowid, element, source, code, libelle, active ) values (212, 'conferenceorbooth', 'external', 'RESPONSIBLE',   'Booth responsible', 1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 185 sql='CREATE TABLE khns_partnership(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,ref varchar(128) DEFAULT '(PROV)' NOT NULL,status smallint NOT NULL DEFAULT '0',fk_soc integer,fk_member integer,date_partnership_start date NOT NULL,date_partnership_end date NULL,entity integer	DEFAULT 1 NOT NULL,reason_decline_or_cancel text NULL,date_creation datetime NOT NULL,fk_user_creat integer NOT NULL,tms timestamp,fk_user_modif integer,note_private text,note_public text,last_main_doc varchar(255),count_last_url_check_error integer DEFAULT '0',last_check_backlink datetime NULL,import_key varchar(14),model_pdf varchar(255)) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 186 sql='ALTER TABLE khns_partnership ADD COLUMN last_check_backlink datetime NULL;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 187 sql='ALTER TABLE khns_partnership ADD INDEX idx_partnership_rowid (rowid);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 188 sql='ALTER TABLE khns_partnership ADD INDEX idx_partnership_ref (ref);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 189 sql='ALTER TABLE khns_partnership ADD INDEX idx_partnership_fk_soc (fk_soc);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 190 sql='ALTER TABLE khns_partnership ADD CONSTRAINT khns_partnership_fk_user_creat FOREIGN KEY (fk_user_creat) REFERENCES khns_user(rowid);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 191 sql='ALTER TABLE khns_partnership ADD INDEX idx_partnership_status (status);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 192 sql='ALTER TABLE khns_partnership ADD INDEX idx_partnership_fk_member (fk_member);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 193 sql='create table khns_partnership_extrafields(rowid                     integer AUTO_INCREMENT PRIMARY KEY,tms                       timestamp,fk_object                 integer NOT NULL,import_key                varchar(14)) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 194 sql='ALTER TABLE khns_partnership_extrafields ADD INDEX idx_partnership_fk_object(fk_object);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 195 sql='INSERT INTO khns_c_email_templates (entity,module,type_template,label,lang,position,topic,joinfiles,content) VALUES (0, 'partnership', 'partnership_send', '(SendingEmailOnPartnershipWillSoonBeCanceled)', '', 100, '[__[MAIN_INFO_SOCIETE_NOM]__] - __(YourPartnershipWillSoonBeCanceledTopic)__', 0, '&lt;body&gt;\n &lt;p&gt;Hello,&lt;br&gt;&lt;br&gt;\n__(YourPartnershipWillSoonBeCanceledContent)__&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;br /&gt;\n\n            __(Sincerely)__ &lt;br /&gt;\n            __[MAIN_INFO_SOCIETE_NOM]__ &lt;br /&gt;\n &lt;/body&gt;\n');'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 196 sql='INSERT INTO khns_c_email_templates (entity,module,type_template,label,lang,position,topic,joinfiles,content) VALUES (0, 'partnership', 'partnership_send', '(SendingEmailOnPartnershipCanceled)', '', 100, '[__[MAIN_INFO_SOCIETE_NOM]__] - __(YourPartnershipCanceledTopic)__', 0, '&lt;body&gt;\n &lt;p&gt;Hello,&lt;br&gt;&lt;br&gt;\n__(YourPartnershipCanceledContent)__&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;br /&gt;\n\n            __(Sincerely)__ &lt;br /&gt;\n            __[MAIN_INFO_SOCIETE_NOM]__ &lt;br /&gt;\n &lt;/body&gt;\n');'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 197 sql='INSERT INTO khns_c_email_templates (entity,module,type_template,label,lang,position,topic,joinfiles,content) VALUES (0, 'partnership', 'partnership_send', '(SendingEmailOnPartnershipRefused)', '', 100, '[__[MAIN_INFO_SOCIETE_NOM]__] - __(YourPartnershipRefusedTopic)__', 0, '&lt;body&gt;\n &lt;p&gt;Hello,&lt;br&gt;&lt;br&gt;\n__(YourPartnershipRefusedContent)__&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;br /&gt;\n\n            __(Sincerely)__ &lt;br /&gt;\n            __[MAIN_INFO_SOCIETE_NOM]__ &lt;br /&gt;\n &lt;/body&gt;\n');'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 198 sql='INSERT INTO khns_c_email_templates (entity,module,type_template,label,lang,position,topic,joinfiles,content) VALUES (0, 'partnership', 'partnership_send', '(SendingEmailOnPartnershipAccepted)', '', 100, '[__[MAIN_INFO_SOCIETE_NOM]__] - __(YourPartnershipAcceptedTopic)__', 0, '&lt;body&gt;\n &lt;p&gt;Hello,&lt;br&gt;&lt;br&gt;\n__(YourPartnershipAcceptedContent)__&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;br /&gt;\n\n            __(Sincerely)__ &lt;br /&gt;\n            __[MAIN_INFO_SOCIETE_NOM]__ &lt;br /&gt;\n &lt;/body&gt;\n');'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 199 sql='ALTER TABLE khns_adherent ADD COLUMN url varchar(255) NULL AFTER email;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 200 sql='ALTER TABLE khns_facture_fourn ADD COLUMN date_closing datetime DEFAULT NULL after date_valid;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 201 sql='ALTER TABLE khns_facture_fourn ADD COLUMN fk_user_closing integer DEFAULT NULL after fk_user_valid;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 202 sql='ALTER TABLE khns_entrepot ADD COLUMN fk_project INTEGER DEFAULT NULL AFTER entity;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 203 sql='ALTER TABLE khns_payment_donation ADD COLUMN ext_payment_site  varchar(128) AFTER note;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 204 sql='ALTER TABLE khns_payment_donation ADD COLUMN ext_payment_id  varchar(128) AFTER note;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 205 sql='UPDATE khns_const SET type = 'chaine', value = __ENCRYPT('github')__ WHERE __DECRYPT('name')__ = 'MAIN_BUGTRACK_ENABLELINK' AND __DECRYPT('value')__ = '1';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 206 sql='ALTER TABLE khns_facture_fourn_det ADD COLUMN fk_remise_except integer DEFAULT NULL after remise_percent;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 207 sql='ALTER TABLE khns_facture_fourn_det ADD UNIQUE INDEX uk_fk_remise_except (fk_remise_except, fk_facture_fourn);'</td></tr>
<!-- Result = DB_ERROR_KEY_NAME_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 208 sql='CREATE TABLE khns_knowledgemanagement_knowledgerecord(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,ref varchar(128) NOT NULL,date_creation datetime NOT NULL,tms timestamp,last_main_doc varchar(255),fk_user_creat integer NOT NULL,fk_user_modif integer,fk_user_valid integer,import_key varchar(14),model_pdf varchar(255),question text NOT NULL,answer text,url varchar(255),fk_ticket integer,fk_c_ticket_category integer,status integer NOT NULL) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 209 sql='ALTER TABLE khns_knowledgemanagement_knowledgerecord ADD COLUMN fk_ticket integer;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 210 sql='ALTER TABLE khns_knowledgemanagement_knowledgerecord ADD COLUMN fk_c_ticket_category integer;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 211 sql='ALTER TABLE khns_knowledgemanagement_knowledgerecord ADD COLUMN url varchar(255);'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 212 sql='create table khns_knowledgemanagement_knowledgerecord_extrafields(rowid                     integer AUTO_INCREMENT PRIMARY KEY,tms                       timestamp,fk_object                 integer NOT NULL,import_key                varchar(14)) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 213 sql='ALTER TABLE khns_adherent_type ADD COLUMN amount DOUBLE(24,8) NULL DEFAULT NULL AFTER subscription;'</td></tr>
<!-- Result = DB_ERROR_COLUMN_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 214 sql='INSERT INTO khns_c_action_trigger (code,label,description,elementtype,rang) VALUES ('COMPANY_MODIFY','Third party update','Executed when you update third party','societe',1);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 215 sql='INSERT INTO khns_c_action_trigger (code,label,description,elementtype,rang) VALUES ('CONTACT_MODIFY','Contact address update','Executed when a contact is updated','contact',51);'</td></tr>
<!-- Result = DB_ERROR_RECORD_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 216 sql='create table khns_c_partnership_type(rowid      	integer AUTO_INCREMENT PRIMARY KEY,entity        integer DEFAULT 1 NOT NULL,code          varchar(32) NOT NULL,label 	    varchar(64)	NOT NULL,active  	    tinyint DEFAULT 1  NOT NULL)ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 217 sql='DELETE FROM khns_rights_def WHERE module = 'hrm' AND perms = 'employee';'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 218 sql='CREATE TABLE khns_ecm_directories_extrafields(rowid                     integer AUTO_INCREMENT PRIMARY KEY,tms                       timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,fk_object                 integer NOT NULL,import_key                varchar(14)) ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 219 sql='DROP TABLE khns_categorie_association;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHTABLE -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 220 sql='DROP TABLE khns_cond_reglement;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHTABLE -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 221 sql='DROP TABLE khns_zapier_hook_extrafields;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHTABLE -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 222 sql='CREATE TABLE khns_onlinesignature(rowid                     integer AUTO_INCREMENT PRIMARY KEY,entity                    integer DEFAULT 1 NOT NULL,object_type               varchar(32) NOT NULL,object_id					integer NOT NULL,datec                     datetime NOT NULL,tms                       timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,name						varchar(255) NOT NULL,ip						varchar(128),pathoffile				varchar(255))ENGINE=innodb;'</td></tr>
<!-- Result = DB_ERROR_TABLE_ALREADY_EXISTS -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 223 sql='ALTER TABLE khns_partnership MODIFY COLUMN date_partnership_end date NULL;'</td></tr>
<!-- Result = OK -->
</tr>
<tr class="trforrunsql"><td class="tdtop opacitymedium">Request 224 sql='ALTER TABLE khns_facture_fourn CHANGE COLUMN fk_mode_transport fk_transport_mode integer;'</td></tr>
<!-- Result = DB_ERROR_NOSUCHFIELD -->
</tr>
<tr><td>Script processing</td><td class="right"><span class="ok">OK</span><script type="text/javascript" language="javascript">
		jQuery(document).ready(function() {
			function init_trrunsql()
			{
				console.log("toggle .trforrunsql");
				jQuery(".trforrunsql").toggle();
			}
			init_trrunsql();
			jQuery(".trforrunsqlshowhide").click(function() {
				init_trrunsql();
			});
		});
		</script> - <a class="trforrunsqlshowhide" href="#">Show-Hide details</a></td></tr>
</table></td></tr></table>
</td></tr></table>
<!-- pFooter -->
<div class="nextbutton" id="nextbutton"><input type="submit" value="Next step ->"></div><input type="hidden" name="selectlang" value="en_US"></form>

<!-- Start of log output
2021-10-04 20:53:08 DEBUG --- upgrade: Entering upgrade.php page<br>
2021-10-04 20:53:08 DEBUG DoliDBMysqli::connect host=db5005135846.hosting-data.io, port=3306, login=dbu1285995, passwd=--hidden--, name=<br>
2021-10-04 20:53:08 DEBUG DoliDBMysqli::select_db database=dbs4297934<br>
2021-10-04 20:53:08 DEBUG upgrade: Server connection: db5005135846.hosting-data.io OK<br>
2021-10-04 20:53:08 DEBUG upgrade: Database connection successful: dbs4297934<br>
2021-10-04 20:53:08 DEBUG upgrade: Database server version: 5.7.33-log<br>
2021-10-04 20:53:08 DEBUG upgrade: Client charset: utf8<br>
2021-10-04 20:53:08 DEBUG upgrade: ClientCollation: utf8_general_ci<br>
2021-10-04 20:53:08 DEBUG Clean database from bad named constraints<br>
2021-10-04 20:53:08 DEBUG sql=SHOW TABLES FROM dbs4297934 ;<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_accounting_account<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_accounting_bookkeeping<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_accounting_bookkeeping_tmp<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_accounting_fiscalyear<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_accounting_groups_account<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_accounting_journal<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_accounting_system<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_actioncomm<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_actioncomm_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_actioncomm_reminder<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_actioncomm_resources<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_adherent<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_adherent_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_adherent_type<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_adherent_type_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_adherent_type_lang<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_advtargetemailing<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_asset<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_asset_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_asset_type<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_asset_type_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bank<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bank_account<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bank_account_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bank_categ<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bank_class<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bank_url<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_blockedlog<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_blockedlog_authority<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bom_bom<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bom_bom_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bom_bomline<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bom_bomline_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bookmark<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_bordereau_cheque<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_boxes<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_boxes_def<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_budget<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_budget_lines<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_accounting_category<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_action_trigger<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_actioncomm<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_availability<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_barcode_type<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_chargesociales<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_civility<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_country<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_currencies<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_departements<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_ecotaxe<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_effectif<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_email_senderprofile<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_email_templates<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_exp_tax_cat<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_exp_tax_range<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_field_list<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_format_cards<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_forme_juridique<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_holiday_types<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_hrm_department<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_hrm_function<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_hrm_public_holiday<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_incoterms<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_input_method<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_input_reason<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_lead_status<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_paiement<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_paiement_temp<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_paper_format<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_partnership_type<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_payment_term<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_price_expression<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_price_global_variable<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_price_global_variable_updater<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_product_nature<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_productbatch_qcstatus<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_propalst<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_prospectcontactlevel<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_prospectlevel<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_recruitment_origin<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_regions<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_revenuestamp<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_shipment_mode<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_shipment_package_type<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_socialnetworks<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_stcomm<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_stcommcontact<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_ticket_category<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_ticket_resolution<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_ticket_severity<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_ticket_type<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_transport_mode<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_tva<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_type_contact<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_type_container<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_type_fees<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_type_resource<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_typent<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_units<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_c_ziptown<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_account<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_actioncomm<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_contact<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_fournisseur<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_lang<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_member<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_product<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_project<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_societe<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_user<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_warehouse<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categorie_website_page<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_categories_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_chargesociales<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande_fournisseur<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande_fournisseur_dispatch<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande_fournisseur_dispatch_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande_fournisseur_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande_fournisseur_log<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande_fournisseurdet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commande_fournisseurdet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commandedet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_commandedet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_comment<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_const<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_contrat<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_contrat_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_contratdet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_contratdet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_contratdet_log<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_cronjob<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_default_values<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_delivery<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_delivery_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_deliverydet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_deliverydet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_deplacement<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_document_model<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_don<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_don_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_ecm_directories<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_ecm_directories_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_ecm_files<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_ecm_files_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_element_contact<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_element_element<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_element_lock<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_element_resources<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_element_tag<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_emailcollector_emailcollector<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_emailcollector_emailcollectoraction<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_emailcollector_emailcollectorfilter<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_entrepot<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_entrepot_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_establishment<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_event_element<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_eventorganization_conferenceorboothattendee<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_eventorganization_conferenceorboothattendee_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_events<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expedition<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expedition_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expedition_package<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expeditiondet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expeditiondet_batch<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expeditiondet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expensereport<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expensereport_det<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expensereport_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expensereport_ik<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_expensereport_rules<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_export_compta<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_export_model<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facture<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facture_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facture_fourn<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facture_fourn_det<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facture_fourn_det_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facture_fourn_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facture_rec<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facture_rec_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facturedet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facturedet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facturedet_rec<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_facturedet_rec_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_fichinter<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_fichinter_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_fichinter_rec<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_fichinterdet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_fichinterdet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_fichinterdet_rec<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_holiday<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_holiday_config<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_holiday_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_holiday_logs<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_holiday_users<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_import_model<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_intracommreport<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_inventory<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_inventorydet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_knowledgemanagement_knowledgerecord<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_knowledgemanagement_knowledgerecord_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_links<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_loan<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_loan_schedule<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_localtax<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_mailing<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_mailing_cibles<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_mailing_unsubscribe<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_menu<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_mrp_mo<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_mrp_mo_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_mrp_production<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_multicurrency<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_multicurrency_rate<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_notify<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_notify_def<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_notify_def_object<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_oauth_state<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_oauth_token<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_object_lang<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_onlinesignature<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_opensurvey_comments<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_opensurvey_formquestions<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_opensurvey_sondage<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_opensurvey_user_formanswers<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_opensurvey_user_studs<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_overwrite_trans<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_paiement<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_paiement_facture<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_paiementcharge<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_paiementfourn<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_paiementfourn_facturefourn<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_partnership<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_partnership_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_payment_donation<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_payment_expensereport<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_payment_loan<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_payment_salary<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_payment_salary_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_payment_various<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_payment_vat<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_pos_cash_fence<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_prelevement_bons<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_prelevement_facture<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_prelevement_facture_demande<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_prelevement_lignes<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_prelevement_rejet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_printer_ipp<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_printing<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_association<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_attribute<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_attribute_combination<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_attribute_combination2val<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_attribute_combination_price_level<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_attribute_value<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_batch<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_customer_price<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_customer_price_log<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_fournisseur_price<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_fournisseur_price_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_fournisseur_price_log<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_lang<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_lot<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_lot_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_perentity<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_price<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_price_by_qty<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_pricerules<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_stock<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_product_warehouse_properties<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_projet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_projet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_projet_task<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_projet_task_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_projet_task_time<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_propal<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_propal_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_propal_merge_pdf_product<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_propaldet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_propaldet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_reception<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_reception_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_recruitment_recruitmentcandidature<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_recruitment_recruitmentcandidature_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_recruitment_recruitmentjobposition<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_recruitment_recruitmentjobposition_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_resource<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_resource_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_rights_def<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_salary<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_session<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_account<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_address<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_commerciaux<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_contacts<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_log<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_perentity<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_prices<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_remise<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_remise_except<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_remise_supplier<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_societe_rib<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_socpeople<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_socpeople_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_stock_lotserial<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_stock_mouvement<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_subscription<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_supplier_proposal<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_supplier_proposal_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_supplier_proposaldet<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_supplier_proposaldet_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_takepos_floor_tables<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_ticket<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_ticket_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_tva<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_user<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_user_alert<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_user_clicktodial<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_user_employment<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_user_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_user_param<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_user_rib<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_user_rights<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_usergroup<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_usergroup_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_usergroup_rights<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_usergroup_user<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_website<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_website_extrafields<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_website_page<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_workstation_workstation<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_workstation_workstation_resource<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_workstation_workstation_usergroup<br>
2021-10-04 20:53:08 DEBUG sql=SHOW CREATE TABLE khns_zapier_hook<br>
2021-10-04 20:53:08 DEBUG Scan sql files for migration files in mysql/migration/<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql run sql file mysql/migration/13.0.0-14.0.0.sql silent=0 entity= usesavepoint=1 handler= okerror=default<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 1<br>
2021-10-04 20:53:08 DEBUG sql=SET sql_mode = 'ALLOW_INVALID_DATES';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 2<br>
2021-10-04 20:53:08 DEBUG sql=update khns_propal set tms = datec where DATE(STR_TO_DATE(tms, '%Y-%m-%d')) IS NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 3<br>
2021-10-04 20:53:08 DEBUG sql=SET sql_mode = 'NO_ZERO_DATE';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 4<br>
2021-10-04 20:53:08 DEBUG sql=update khns_propal set tms = null where DATE(STR_TO_DATE(tms, '%Y-%m-%d')) IS NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 5<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_ecm_files ADD COLUMN note_private text AFTER fk_user_m;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'note_private'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 6<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_ecm_files ADD COLUMN note_public text AFTER note_private;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'note_public'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 7<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_accounting_bookkeeping DROP INDEX idx_accounting_bookkeeping_numero_compte;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 8<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_accounting_bookkeeping DROP INDEX idx_accounting_bookkeeping_code_journal;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 9<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_fk_docdet (fk_docdet);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_accounting_bookkeeping_fk_docdet'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 10<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_doc_date (doc_date);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_accounting_bookkeeping_doc_date'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 11<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_numero_compte (numero_compte, entity);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 12<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_code_journal (code_journal, entity);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 13<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_accounting_bookkeeping ADD INDEX idx_accounting_bookkeeping_piece_num (piece_num, entity);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_accounting_bookkeeping_piece_num'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 14<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_recruitment_recruitmentcandidature MODIFY COLUMN email_msgid VARCHAR(175);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 15<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_asset CHANGE COLUMN amount amount_ht double(24,8) DEFAULT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'amount' in 'khns_asset'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 16<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_asset ADD COLUMN amount_vat double(24,8) DEFAULT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'amount_vat'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 17<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_supplier_proposal_extrafields ADD INDEX idx_supplier_proposal_extrafields (fk_object);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_supplier_proposal_extrafields'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 18<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_supplier_proposaldet_extrafields ADD INDEX idx_supplier_proposaldet_extrafields (fk_object);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_supplier_proposaldet_extrafields'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 19<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_asset_extrafields ADD INDEX idx_asset_extrafields (fk_object);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_asset_extrafields'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 20<br>
2021-10-04 20:53:08 DEBUG sql=insert into khns_c_actioncomm (id, code, type, libelle, module, active, position) values ( 6,'AC_EMAIL_IN','system','reception Email',NULL, 1, 4);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '6' for key 'PRIMARY'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 21<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_accounting_bookkeeping MODIFY COLUMN montant double(24,8) NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 22<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_c_country SET eec = 1 WHERE code IN ('AT','BE','BG','CY','CZ','DE','DK','EE','ES','FI','FR','GR','HR','NL','HU','IE','IM','IT','LT','LU','LV','MC','MT','PL','PT','RO','SE','SK','SI');<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 23<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_accounting_system (fk_country, pcg_version, label, active) VALUES (  11, 'US-BASE', 'USA basic chart of accounts', 1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'US-BASE' for key 'uk_accounting_system_pcg_version'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 24<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_accounting_system (fk_country, pcg_version, label, active) VALUES ( 14, 'CA-ENG-BASE', 'Canadian basic chart of accounts - English', 1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'CA-ENG-BASE' for key 'uk_accounting_system_pcg_version'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 25<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_accounting_system (fk_country, pcg_version, label, active) VALUES ( 154, 'SAT/24-2019', 'Catalogo y codigo agrupador fiscal del 2019', 1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'SAT/24-2019' for key 'uk_accounting_system_pcg_version'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 26<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql New Request 26<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_const set value = 'eldy' WHERE value = 'auguria';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 27<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql New Request 27<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_const set value = 'eldy' WHERE value = 'bureau2crea';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 28<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql New Request 28<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_const set value = 'eldy' WHERE value = 'amarok';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 29<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql New Request 29<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_const set value = 'eldy' WHERE value = 'cameleo';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 30<br>
2021-10-04 20:53:08 DEBUG sql=DELETE FROM khns_user_param where param = 'MAIN_THEME' and value in ('auguria', 'amarok', 'cameleo');<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 31<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_c_ticket_type set label = 'Issue or bug' WHERE code = 'ISSUE';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 32<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_ticket_type (code, pos, label, active, use_default, description) VALUES('PROBLEM', '22', 'Problem', 0, 0, NULL);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'PROBLEM-1' for key 'uk_code'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 33<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_import_model MODIFY COLUMN type varchar(64);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 34<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_export_model MODIFY COLUMN type varchar(64);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 35<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_import_model ADD COLUMN entity integer DEFAULT 0 NOT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'entity'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 36<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_export_model ADD COLUMN entity integer DEFAULT 0 NOT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'entity'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 37<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product_lot ADD COLUMN eol_date datetime NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'eol_date'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 38<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product_lot ADD COLUMN manufacturing_date datetime NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'manufacturing_date'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 39<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product_lot ADD COLUMN scrapping_date datetime NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'scrapping_date'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 40<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_accounting_groups_account(rowid            integer AUTO_INCREMENT PRIMARY KEY,fk_accounting_account		INTEGER NOT NULL,fk_c_accounting_category	INTEGER NOT NULL)ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_accounting_groups_account' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 41<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_oauth_token ADD COLUMN restricted_ips varchar(200);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'restricted_ips'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 42<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_oauth_token ADD COLUMN datec datetime DEFAULT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'datec'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 43<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_oauth_token ADD COLUMN tms timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'tms'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 44<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_events ADD COLUMN authentication_method varchar(64) NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'authentication_method'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 45<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_events ADD COLUMN fk_oauth_token integer NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_oauth_token'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 46<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_mailing_cibles MODIFY COLUMN tag varchar(64) NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 47<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_mailing_cibles ADD INDEX idx_mailing_cibles_tag (tag);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_mailing_cibles_tag'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 48<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_c_availability ADD COLUMN position integer NOT NULL DEFAULT 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'position'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 49<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_adherent ADD COLUMN ref varchar(30) AFTER rowid;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'ref'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 50<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_adherent SET ref = rowid WHERE ref = '' or ref IS NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 51<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_adherent MODIFY COLUMN ref varchar(30) NOT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 52<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_adherent ADD UNIQUE INDEX uk_adherent_ref (ref, entity);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'uk_adherent_ref'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 53<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_societe ADD COLUMN accountancy_code_sell varchar(32) AFTER webservices_key;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'accountancy_code_sell'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 54<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_societe ADD COLUMN accountancy_code_buy varchar(32) AFTER accountancy_code_sell;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'accountancy_code_buy'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 55<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_bank_account ADD COLUMN ics varchar(32) NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'ics'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 56<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_bank_account ADD COLUMN ics_transfer varchar(32) NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'ics_transfer'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 57<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture MODIFY COLUMN date_valid DATETIME NULL DEFAULT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 58<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_dolibarr_state_board.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_dolibarr_state_board.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 59<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_members_last_modified.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_members_last_modified.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 60<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_members_last_subscriptions.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_members_last_subscriptions.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 61<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_members_subscriptions_by_year.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_members_subscriptions_by_year.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 62<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_members_by_type.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_members_by_type.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 63<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_website ADD COLUMN lastaccess datetime NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'lastaccess'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 64<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_website ADD COLUMN pageviews_month BIGINT UNSIGNED DEFAULT 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'pageviews_month'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 65<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_website ADD COLUMN pageviews_total BIGINT UNSIGNED DEFAULT 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'pageviews_total'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 66<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_workstation_workstation DROP FOREIGN KEY khns_workstation_workstation_fk_user_creat;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Can't DROP 'khns_workstation_workstation_fk_user_creat'; check that column/key exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 67<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_propal DROP FOREIGN KEY khns_propal_fk_warehouse;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Can't DROP 'khns_propal_fk_warehouse'; check that column/key exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 68<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_workstation_workstation(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,ref varchar(128) DEFAULT '(PROV)' NOT NULL,label varchar(255),type varchar(7),note_public text,entity int DEFAULT 1,note_private text,date_creation datetime NOT NULL,tms timestamp,fk_user_creat integer NOT NULL,fk_user_modif integer,import_key varchar(14),status smallint NOT NULL,nb_operators_required integer,thm_operator_estimated double,thm_machine_estimated double) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_workstation_workstation' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 69<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_workstation_workstation ADD INDEX idx_workstation_workstation_rowid (rowid);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_workstation_workstation_rowid'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 70<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_workstation_workstation ADD INDEX idx_workstation_workstation_ref (ref);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_workstation_workstation_ref'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 71<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_workstation_workstation ADD CONSTRAINT fk_workstation_workstation_fk_user_creat FOREIGN KEY (fk_user_creat) REFERENCES khns_user(rowid);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Can't write; duplicate key in table '#sql-5eb2_c5b86'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 72<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_workstation_workstation ADD INDEX idx_workstation_workstation_status (status);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_workstation_workstation_status'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 73<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_workstation_workstation_resource(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,tms timestamp,fk_resource integer,fk_workstation integer) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_workstation_workstation_resource' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 74<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_workstation_workstation_usergroup(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,tms timestamp,fk_usergroup integer,fk_workstation integer) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_workstation_workstation_usergroup' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 75<br>
2021-10-04 20:53:08 DEBUG sql=DROP TABLE khns_c_producbatch_qcstatus;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHTABLE Unknown table 'dbs4297934.khns_c_producbatch_qcstatus'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 76<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_c_productbatch_qcstatus(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,entity   integer NOT NULL DEFAULT 1,code     varchar(16)        NOT NULL,label    varchar(50)        NOT NULL,active   integer  DEFAULT 1 NOT NULL) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_c_productbatch_qcstatus' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 77<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_c_productbatch_qcstatus ADD UNIQUE INDEX uk_c_productbatch_qcstatus(code, entity);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'uk_c_productbatch_qcstatus'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 78<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_productbatch_qcstatus (code, label, active) VALUES ('OK', 'InWorkingOrder', 1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'OK-1' for key 'uk_c_productbatch_qcstatus'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 79<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_productbatch_qcstatus (code, label, active) VALUES ('KO', 'OutOfOrder', 1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'KO-1' for key 'uk_c_productbatch_qcstatus'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 80<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product_customer_price ADD COLUMN ref_customer varchar(30);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'ref_customer'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 81<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product_customer_price_log ADD COLUMN ref_customer varchar(30);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'ref_customer'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 82<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_propal ADD COLUMN fk_warehouse integer DEFAULT NULL AFTER fk_shipping_method;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_warehouse'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 83<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_propal ADD INDEX idx_propal_fk_warehouse(fk_warehouse);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_propal_fk_warehouse'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 84<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_societe DROP INDEX idx_societe_entrepot;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Can't DROP 'idx_societe_entrepot'; check that column/key exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 85<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_societe CHANGE fk_entrepot fk_warehouse INTEGER DEFAULT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'fk_entrepot' in 'khns_societe'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 86<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_societe ADD INDEX idx_societe_warehouse(fk_warehouse);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_societe_warehouse'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 87<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_societe MODIFY COLUMN fk_typent integer NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 88<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_societe SET fk_typent=NULL, tms=tms WHERE fk_typent=0;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 89<br>
2021-10-04 20:53:08 DEBUG sql=DELETE FROM khns_c_typent WHERE code='TE_UNKNOWN';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 90<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_socpeople MODIFY poste varchar(255);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 91<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_menu ADD COLUMN prefix varchar(255) NULL AFTER titre;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'prefix'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 92<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_chargesociales ADD COLUMN fk_user integer DEFAULT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_user'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 93<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_mrp_production ADD COLUMN origin_id integer AFTER fk_mo;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'origin_id'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 94<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_mrp_production ADD COLUMN origin_type varchar(10) AFTER origin_id;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'origin_type'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 95<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_fichinter ADD COLUMN last_main_doc varchar(255) AFTER model_pdf;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'last_main_doc'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 96<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_projet ADD COLUMN last_main_doc varchar(255) AFTER model_pdf;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'last_main_doc'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 97<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_expensereport ADD COLUMN last_main_doc varchar(255) DEFAULT NULL AFTER model_pdf;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'last_main_doc'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 98<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_payment_vat(rowid           integer AUTO_INCREMENT PRIMARY KEY,fk_tva          integer,datec           datetime,tms             timestamp,datep           datetime,amount          double(24,8) DEFAULT 0,fk_typepaiement integer NOT NULL,num_paiement    varchar(50),note            text,fk_bank         integer NOT NULL,fk_user_creat   integer,fk_user_modif   integer)ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_payment_vat' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 99<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_tva ADD COLUMN paye smallint default 1 NOT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'paye'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 100<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_tva ADD COLUMN fk_account integer;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_account'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 101<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_payment_vat (rowid, fk_tva, datec, datep, amount, fk_typepaiement, num_paiement, note, fk_bank, fk_user_creat, fk_user_modif) SELECT rowid, rowid, NOW(), datep, amount, COALESCE(fk_typepayment, 0), num_payment, 'Created automatically by migration v13 to v14', fk_bank, fk_user_creat, fk_user_modif FROM khns_tva WHERE fk_bank IS NOT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 102<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_tva ALTER COLUMN paye SET DEFAULT 0;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 103<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationEmailAskConf', 10, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationEmailAskConf)__', '__(Hello)__ __THIRDPARTY_NAME__,<br /><br />__(ThisIsContentOfYourOrganizationEventConfRequestWasReceived)__<br /><br />__ONLINE_PAYMENT_TEXT_AND_URL__<br /><br /><br />__(Sincerely)__<br />__USER_SIGNATURE__', null, '1', null);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-EventOrganizationEmailAskConf-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 104<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationEmailAskBooth', 20, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationEmailAskBooth)__', '__(Hello)__ __THIRDPARTY_NAME__,<br /><br />__(ThisIsContentOfYourOrganizationEventBoothRequestWasReceived)__<br /><br />__ONLINE_PAYMENT_TEXT_AND_URL__<br /><br /><br />__(Sincerely)__<br />__USER_SIGNATURE__', null, '1', null);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-EventOrganizationEmailAskBooth-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 105<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationEmailSubsBooth', 30, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationEmailSubsBooth)__', '__(Hello)__ __THIRDPARTY_NAME__,<br /><br />__(ThisIsContentOfYourOrganizationEventBoothSubscriptionWasReceived)__<br /><br />__ONLINE_PAYMENT_TEXT_AND_URL__<br /><br /><br />__(Sincerely)__<br />__USER_SIGNATURE__', null, '1', null);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-EventOrganizationEmailSubsBooth-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 106<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationEmailSubsEvent', 40, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationEmailSubsEvent)__', '__(Hello)__ __THIRDPARTY_NAME__,<br /><br />__(ThisIsContentOfYourOrganizationEventEventSubscriptionWasReceived)__<br /><br />__(Sincerely)__<br /><br />__MYCOMPANY_NAME__<br />__USER_SIGNATURE__', null, '1', null);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-EventOrganizationEmailSubsEvent-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 107<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationMassEmailAttendees', 50, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationMassEmailAttendees)__', '__(Hello)__ __THIRDPARTY_NAME__,<br /><br />__(ThisIsContentOfYourOrganizationEventBulkMailToAttendees)__<br /><br />__(Sincerely)__<br />__USER_SIGNATURE__', null, '1', null);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-EventOrganizationMassEmailAttendees-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 108<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity, module, type_template, lang, private, fk_user, datec, tms, label, position, active, topic, content, content_lines, enabled, joinfiles) values (0, '', 'eventorganization_send', '', 0, null, null, '2021-02-14 14:42:41', 'EventOrganizationMassEmailSpeakers', 60, 1, '[__[MAIN_INFO_SOCIETE_NOM]__] __(EventOrganizationMassEmailSpeakers)__', '__(Hello)__ __THIRDPARTY_NAME__,<br /><br />__(ThisIsContentOfYourOrganizationEventBulkMailToSpeakers)__<br /><br />__(Sincerely)__<br />__USER_SIGNATURE__', null, '1', null);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-EventOrganizationMassEmailSpeakers-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 109<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_projet ADD COLUMN accept_conference_suggestions integer DEFAULT 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'accept_conference_suggestions'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 110<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_projet ADD COLUMN accept_booth_suggestions integer DEFAULT 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'accept_booth_suggestions'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 111<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_projet ADD COLUMN price_registration double(24,8);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'price_registration'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 112<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_projet ADD COLUMN price_booth double(24,8);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'price_booth'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 113<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_actioncomm ADD COLUMN num_vote integer DEFAULT NULL AFTER reply_to;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'num_vote'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 114<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_actioncomm ADD COLUMN event_paid smallint NOT NULL DEFAULT 0 AFTER num_vote;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'event_paid'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 115<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_actioncomm ADD COLUMN status smallint NOT NULL DEFAULT 0 AFTER event_paid;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'status'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 116<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_actioncomm ADD COLUMN ref varchar(30) AFTER id;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'ref'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 117<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_actioncomm SET ref = id WHERE ref = '' OR ref IS NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 118<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_actioncomm MODIFY COLUMN ref varchar(30) NOT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 119<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_actioncomm ADD UNIQUE INDEX uk_actioncomm_ref (ref, entity);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'uk_actioncomm_ref'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 120<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_c_actioncomm MODIFY code varchar(50) NOT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 121<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_c_actioncomm MODIFY module varchar(50) DEFAULT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 122<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_actioncomm (id, code, type, libelle, module, active, position) VALUES ( 60,'AC_EO_ONLINECONF','module','Online/Virtual conference','conference@eventorganization', 1, 60);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '60' for key 'PRIMARY'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 123<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_actioncomm (id, code, type, libelle, module, active, position) VALUES ( 61,'AC_EO_INDOORCONF','module','Indoor conference','conference@eventorganization', 1, 61);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '61' for key 'PRIMARY'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 124<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_actioncomm (id, code, type, libelle, module, active, position) VALUES ( 62,'AC_EO_ONLINEBOOTH','module','Online/Virtual booth','booth@eventorganization', 1, 62);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '62' for key 'PRIMARY'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 125<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_actioncomm (id, code, type, libelle, module, active, position) VALUES ( 63,'AC_EO_INDOORBOOTH','module','Indoor booth','booth@eventorganization', 1, 63);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '63' for key 'PRIMARY'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 126<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_commande CHANGE COLUMN tva total_tva double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'tva' in 'khns_commande'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 127<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_supplier_proposal CHANGE COLUMN tva total_tva double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'tva' in 'khns_supplier_proposal'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 128<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_supplier_proposal CHANGE COLUMN total total_ttc double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'total' in 'khns_supplier_proposal'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 129<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_propal CHANGE COLUMN tva total_tva double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'tva' in 'khns_propal'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 130<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_propal CHANGE COLUMN total total_ttc double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'total' in 'khns_propal'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 131<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture CHANGE COLUMN tva total_tva double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'tva' in 'khns_facture'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 132<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture CHANGE COLUMN total total_ht double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'total' in 'khns_facture'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 133<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture_rec CHANGE COLUMN tva total_tva double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'tva' in 'khns_facture_rec'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 134<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture_rec CHANGE COLUMN total total_ht double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'total' in 'khns_facture_rec'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 135<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_commande_fournisseur CHANGE COLUMN tva total_tva double(24,8) default 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'tva' in 'khns_commande_fournisseur'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 136<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_salary(rowid           integer AUTO_INCREMENT PRIMARY KEY,ref             varchar(30) NULL,label           varchar(255),tms             timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,datec           datetime,fk_user         integer NOT NULL,datep           date,datev           date,salary          double(24,8),amount          double(24,8) NOT NULL DEFAULT 0,fk_projet       integer DEFAULT NULL,datesp          date,dateep          date,entity          integer DEFAULT 1 NOT NULL,note            text,fk_bank         integer,paye            smallint default 1 NOT NULL,fk_typepayment  integer NOT NULL,fk_account      integer,fk_user_author  integer,fk_user_modif   integer) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_salary' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 137<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_payment_salary CHANGE COLUMN fk_user fk_user integer NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 138<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_payment_salary ADD COLUMN fk_salary integer;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_salary'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 139<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_salary (rowid, ref, fk_user, amount, fk_projet, fk_typepayment, label, datesp, dateep, entity, note, fk_bank, paye) SELECT ps.rowid, ps.rowid, ps.fk_user, ps.amount, ps.fk_projet, ps.fk_typepayment, ps.label, ps.datesp, ps.dateep, ps.entity, ps.note, ps.fk_bank, 1 FROM khns_payment_salary ps WHERE ps.fk_salary IS NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 140<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_payment_salary SET fk_salary = rowid WHERE fk_salary IS NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 141<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_payment_salary SET ref = rowid WHERE ref IS NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 142<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_salary ALTER COLUMN paye set default 0;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 143<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_extrafields SET elementtype = 'salary' WHERE elementtype = 'payment_salary';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 144<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_payment_salary_extrafields RENAME TO khns_salary_extrafields;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 145<br>
2021-10-04 20:53:08 DEBUG sql=DROP INDEX idx_payment_salary_extrafields on khns_salary_extrafields;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 146<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_salary_extrafields ADD INDEX idx_salary_extrafields (fk_object);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 147<br>
2021-10-04 20:53:08 DEBUG sql=DELETE FROM khns_boxes WHERE box_id IN (SELECT rowid FROM khns_boxes_def WHERE file IN ('box_graph_ticket_by_severity', 'box_ticket_by_severity.php', 'box_nb_ticket_last_x_days.php', 'box_nb_tickets_type.php', 'box_new_vs_close_ticket.php'));<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 148<br>
2021-10-04 20:53:08 DEBUG sql=DELETE FROM khns_boxes_def WHERE file IN ('box_graph_ticket_by_severity', 'box_ticket_by_severity.php', 'box_nb_ticket_last_x_days.php', 'box_nb_tickets_type.php', 'box_new_vs_close_ticket.php');<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 149<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_graph_ticket_by_severity.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_graph_ticket_by_severity.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 150<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_graph_nb_ticket_last_x_days.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_graph_nb_ticket_last_x_days.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 151<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_graph_nb_tickets_type.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_graph_nb_tickets_type.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 152<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_boxes_def (file, entity) SELECT  'box_graph_new_vs_close_ticket.php', 1 FROM DUAL WHERE NOT EXISTS (SELECT * FROM khns_boxes_def WHERE file = 'box_graph_new_vs_close_ticket.php' AND entity = 1);<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 153<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_product_perentity(rowid         				integer AUTO_INCREMENT PRIMARY KEY,fk_product	   				integer,entity             			integer DEFAULT 1 NOT NULL,accountancy_code_sell         varchar(32),accountancy_code_sell_intra   varchar(32),accountancy_code_sell_export  varchar(32),accountancy_code_buy          varchar(32),accountancy_code_buy_intra    varchar(32),accountancy_code_buy_export   varchar(32),pmp double(24,8))ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_product_perentity' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 154<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product_perentity ADD INDEX idx_product_perentity_fk_product (fk_product);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_product_perentity_fk_product'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 155<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product_perentity ADD UNIQUE INDEX uk_product_perentity (fk_product, entity);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'uk_product_perentity'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 156<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_societe_perentity(rowid         			integer AUTO_INCREMENT PRIMARY KEY,fk_soc        			integer,entity             		integer DEFAULT 1 NOT NULL,accountancy_code_sell		varchar(32),accountancy_code_buy		varchar(32))ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_societe_perentity' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 157<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_societe_perentity ADD INDEX idx_societe_perentity_fk_soc (fk_soc);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_societe_perentity_fk_soc'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 158<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_societe_perentity ADD UNIQUE INDEX uk_societe_perentity (fk_soc, entity);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'uk_societe_perentity'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 159<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_eventorganization_conferenceorboothattendee(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,ref varchar(128) NOT NULL,fk_soc integer,fk_actioncomm integer,fk_project integer NOT NULL,email varchar(100),date_subscription datetime,amount double DEFAULT NULL,note_public text,note_private text,date_creation datetime NOT NULL,tms timestamp,fk_user_creat integer,fk_user_modif integer,last_main_doc varchar(255),import_key varchar(14),model_pdf varchar(255),status smallint NOT NULL) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_eventorganization_conferenceorboothattendee' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 160<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee MODIFY COLUMN fk_actioncomm integer NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 161<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD COLUMN fk_project integer NOT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 162<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_rowid (rowid);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_eventorganization_conferenceorboothattendee_rowid'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 163<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_ref (ref);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_eventorganization_conferenceorboothattendee_ref'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 164<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_fk_soc (fk_soc);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_eventorganization_conferenceorboothattendee_fk_soc'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 165<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_fk_actioncomm (fk_actioncomm);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_eventorganization_conferenceorboothattendee_fk_actioncomm'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 166<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD CONSTRAINT fx_eventorganization_conferenceorboothattendee_fk_actioncomm FOREIGN KEY (fk_actioncomm) REFERENCES khns_actioncomm(id);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Can't write; duplicate key in table '#sql-5eb2_c5b86'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 167<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_email (email);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_eventorganization_conferenceorboothattendee_email'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 168<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD INDEX idx_eventorganization_conferenceorboothattendee_status (status);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_eventorganization_conferenceorboothattendee_status'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 169<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee ADD UNIQUE INDEX uk_eventorganization_conferenceorboothattendee(fk_soc, fk_actioncomm, email);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'uk_eventorganization_conferenceorboothattendee'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 170<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_eventorganization_conferenceorboothattendee_extrafields(rowid                     integer AUTO_INCREMENT PRIMARY KEY,tms                       timestamp,fk_object                 integer NOT NULL,import_key                varchar(14)) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_eventorganization_conferenceorboothattendee_extrafields' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 171<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_eventorganization_conferenceorboothattendee_extrafields ADD INDEX idx_conferenceorboothattendee_fk_object(fk_object);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_conferenceorboothattendee_fk_object'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 172<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_c_ticket_category ADD COLUMN public integer DEFAULT 0;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'public'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 173<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_c_ticket_category MODIFY COLUMN pos	integer DEFAULT 0 NOT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 174<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_propal ADD COLUMN date_signature datetime AFTER date_valid;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'date_signature'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 175<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_propal ADD COLUMN fk_user_signature integer AFTER fk_user_valid;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_user_signature'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 176<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_propal ADD CONSTRAINT fk_propal_fk_user_signature FOREIGN KEY (fk_user_signature) REFERENCES khns_user (rowid);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Can't write; duplicate key in table '#sql-5eb2_c5b86'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 177<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_propal SET fk_user_signature = fk_user_cloture WHERE fk_user_signature IS NULL AND fk_user_cloture IS NOT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 178<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_propal SET date_signature = date_cloture WHERE date_signature IS NULL AND date_cloture IS NOT NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 179<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product ADD COLUMN batch_mask VARCHAR(32) DEFAULT NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'batch_mask'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 180<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product ADD COLUMN lifetime INTEGER NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'lifetime'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 181<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_product ADD COLUMN qc_frequency INTEGER NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'qc_frequency'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 182<br>
2021-10-04 20:53:08 DEBUG sql=insert into khns_c_type_contact(rowid, element, source, code, libelle, active ) values (210, 'conferenceorbooth', 'internal', 'MANAGER',  'Conference or Booth manager', 1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '210' for key 'PRIMARY'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 183<br>
2021-10-04 20:53:08 DEBUG sql=insert into khns_c_type_contact(rowid, element, source, code, libelle, active ) values (211, 'conferenceorbooth', 'external', 'SPEAKER',   'Conference Speaker', 1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '211' for key 'PRIMARY'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 184<br>
2021-10-04 20:53:08 DEBUG sql=insert into khns_c_type_contact(rowid, element, source, code, libelle, active ) values (212, 'conferenceorbooth', 'external', 'RESPONSIBLE',   'Booth responsible', 1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '212' for key 'PRIMARY'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 185<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_partnership(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,ref varchar(128) DEFAULT '(PROV)' NOT NULL,status smallint NOT NULL DEFAULT '0',fk_soc integer,fk_member integer,date_partnership_start date NOT NULL,date_partnership_end date NULL,entity integer	DEFAULT 1 NOT NULL,reason_decline_or_cancel text NULL,date_creation datetime NOT NULL,fk_user_creat integer NOT NULL,tms timestamp,fk_user_modif integer,note_private text,note_public text,last_main_doc varchar(255),count_last_url_check_error integer DEFAULT '0',last_check_backlink datetime NULL,import_key varchar(14),model_pdf varchar(255)) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_partnership' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 186<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership ADD COLUMN last_check_backlink datetime NULL;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'last_check_backlink'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 187<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership ADD INDEX idx_partnership_rowid (rowid);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_partnership_rowid'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 188<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership ADD INDEX idx_partnership_ref (ref);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_partnership_ref'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 189<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership ADD INDEX idx_partnership_fk_soc (fk_soc);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_partnership_fk_soc'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 190<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership ADD CONSTRAINT khns_partnership_fk_user_creat FOREIGN KEY (fk_user_creat) REFERENCES khns_user(rowid);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Can't write; duplicate key in table '#sql-5eb2_c5b86'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 191<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership ADD INDEX idx_partnership_status (status);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_partnership_status'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 192<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership ADD INDEX idx_partnership_fk_member (fk_member);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_partnership_fk_member'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 193<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_partnership_extrafields(rowid                     integer AUTO_INCREMENT PRIMARY KEY,tms                       timestamp,fk_object                 integer NOT NULL,import_key                varchar(14)) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_partnership_extrafields' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 194<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership_extrafields ADD INDEX idx_partnership_fk_object(fk_object);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'idx_partnership_fk_object'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 195<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity,module,type_template,label,lang,position,topic,joinfiles,content) VALUES (0, 'partnership', 'partnership_send', '(SendingEmailOnPartnershipWillSoonBeCanceled)', '', 100, '[__[MAIN_INFO_SOCIETE_NOM]__] - __(YourPartnershipWillSoonBeCanceledTopic)__', 0, '<body>\n <p>Hello,<br><br>\n__(YourPartnershipWillSoonBeCanceledContent)__</p>\n<br />\n\n<br />\n\n            __(Sincerely)__ <br />\n            __[MAIN_INFO_SOCIETE_NOM]__ <br />\n </body>\n');<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-(SendingEmailOnPartnershipWillSoonBeCanceled)-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 196<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity,module,type_template,label,lang,position,topic,joinfiles,content) VALUES (0, 'partnership', 'partnership_send', '(SendingEmailOnPartnershipCanceled)', '', 100, '[__[MAIN_INFO_SOCIETE_NOM]__] - __(YourPartnershipCanceledTopic)__', 0, '<body>\n <p>Hello,<br><br>\n__(YourPartnershipCanceledContent)__</p>\n<br />\n\n<br />\n\n            __(Sincerely)__ <br />\n            __[MAIN_INFO_SOCIETE_NOM]__ <br />\n </body>\n');<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-(SendingEmailOnPartnershipCanceled)-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 197<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity,module,type_template,label,lang,position,topic,joinfiles,content) VALUES (0, 'partnership', 'partnership_send', '(SendingEmailOnPartnershipRefused)', '', 100, '[__[MAIN_INFO_SOCIETE_NOM]__] - __(YourPartnershipRefusedTopic)__', 0, '<body>\n <p>Hello,<br><br>\n__(YourPartnershipRefusedContent)__</p>\n<br />\n\n<br />\n\n            __(Sincerely)__ <br />\n            __[MAIN_INFO_SOCIETE_NOM]__ <br />\n </body>\n');<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-(SendingEmailOnPartnershipRefused)-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 198<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_email_templates (entity,module,type_template,label,lang,position,topic,joinfiles,content) VALUES (0, 'partnership', 'partnership_send', '(SendingEmailOnPartnershipAccepted)', '', 100, '[__[MAIN_INFO_SOCIETE_NOM]__] - __(YourPartnershipAcceptedTopic)__', 0, '<body>\n <p>Hello,<br><br>\n__(YourPartnershipAcceptedContent)__</p>\n<br />\n\n<br />\n\n            __(Sincerely)__ <br />\n            __[MAIN_INFO_SOCIETE_NOM]__ <br />\n </body>\n');<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry '0-(SendingEmailOnPartnershipAccepted)-' for key 'uk_c_email_templates'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 199<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_adherent ADD COLUMN url varchar(255) NULL AFTER email;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'url'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 200<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture_fourn ADD COLUMN date_closing datetime DEFAULT NULL after date_valid;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'date_closing'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 201<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture_fourn ADD COLUMN fk_user_closing integer DEFAULT NULL after fk_user_valid;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_user_closing'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 202<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_entrepot ADD COLUMN fk_project INTEGER DEFAULT NULL AFTER entity;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_project'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 203<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_payment_donation ADD COLUMN ext_payment_site  varchar(128) AFTER note;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'ext_payment_site'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 204<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_payment_donation ADD COLUMN ext_payment_id  varchar(128) AFTER note;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'ext_payment_id'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 205<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql New Request 205<br>
2021-10-04 20:53:08 DEBUG sql=UPDATE khns_const SET type = 'chaine', value = 'github' WHERE name = 'MAIN_BUGTRACK_ENABLELINK' AND value = '1';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 206<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture_fourn_det ADD COLUMN fk_remise_except integer DEFAULT NULL after remise_percent;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_remise_except'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 207<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture_fourn_det ADD UNIQUE INDEX uk_fk_remise_except (fk_remise_except, fk_facture_fourn);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_KEY_NAME_ALREADY_EXISTS Duplicate key name 'uk_fk_remise_except'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 208<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_knowledgemanagement_knowledgerecord(rowid integer AUTO_INCREMENT PRIMARY KEY NOT NULL,ref varchar(128) NOT NULL,date_creation datetime NOT NULL,tms timestamp,last_main_doc varchar(255),fk_user_creat integer NOT NULL,fk_user_modif integer,fk_user_valid integer,import_key varchar(14),model_pdf varchar(255),question text NOT NULL,answer text,url varchar(255),fk_ticket integer,fk_c_ticket_category integer,status integer NOT NULL) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_knowledgemanagement_knowledgerecord' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 209<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_knowledgemanagement_knowledgerecord ADD COLUMN fk_ticket integer;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_ticket'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 210<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_knowledgemanagement_knowledgerecord ADD COLUMN fk_c_ticket_category integer;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fk_c_ticket_category'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 211<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_knowledgemanagement_knowledgerecord ADD COLUMN url varchar(255);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'url'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 212<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_knowledgemanagement_knowledgerecord_extrafields(rowid                     integer AUTO_INCREMENT PRIMARY KEY,tms                       timestamp,fk_object                 integer NOT NULL,import_key                varchar(14)) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_knowledgemanagement_knowledgerecord_extrafields' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 213<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_adherent_type ADD COLUMN amount DOUBLE(24,8) NULL DEFAULT NULL AFTER subscription;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'amount'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 214<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_action_trigger (code,label,description,elementtype,rang) VALUES ('COMPANY_MODIFY','Third party update','Executed when you update third party','societe',1);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'COMPANY_MODIFY' for key 'uk_action_trigger_code'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 215<br>
2021-10-04 20:53:08 DEBUG sql=INSERT INTO khns_c_action_trigger (code,label,description,elementtype,rang) VALUES ('CONTACT_MODIFY','Contact address update','Executed when a contact is updated','contact',51);<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'CONTACT_MODIFY' for key 'uk_action_trigger_code'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 216<br>
2021-10-04 20:53:08 DEBUG sql=create table khns_c_partnership_type(rowid      	integer AUTO_INCREMENT PRIMARY KEY,entity        integer DEFAULT 1 NOT NULL,code          varchar(32) NOT NULL,label 	    varchar(64)	NOT NULL,active  	    tinyint DEFAULT 1  NOT NULL)ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_c_partnership_type' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 217<br>
2021-10-04 20:53:08 DEBUG sql=DELETE FROM khns_rights_def WHERE module = 'hrm' AND perms = 'employee';<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 218<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_ecm_directories_extrafields(rowid                     integer AUTO_INCREMENT PRIMARY KEY,tms                       timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,fk_object                 integer NOT NULL,import_key                varchar(14)) ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_ecm_directories_extrafields' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 219<br>
2021-10-04 20:53:08 DEBUG sql=DROP TABLE khns_categorie_association;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHTABLE Unknown table 'dbs4297934.khns_categorie_association'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 220<br>
2021-10-04 20:53:08 DEBUG sql=DROP TABLE khns_cond_reglement;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHTABLE Unknown table 'dbs4297934.khns_cond_reglement'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 221<br>
2021-10-04 20:53:08 DEBUG sql=DROP TABLE khns_zapier_hook_extrafields;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHTABLE Unknown table 'dbs4297934.khns_zapier_hook_extrafields'<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 222<br>
2021-10-04 20:53:08 DEBUG sql=CREATE TABLE khns_onlinesignature(rowid                     integer AUTO_INCREMENT PRIMARY KEY,entity                    integer DEFAULT 1 NOT NULL,object_type               varchar(32) NOT NULL,object_id					integer NOT NULL,datec                     datetime NOT NULL,tms                       timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,name						varchar(255) NOT NULL,ip						varchar(128),pathoffile				varchar(255))ENGINE=innodb;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_TABLE_ALREADY_EXISTS Table 'khns_onlinesignature' already exists<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 223<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_partnership MODIFY COLUMN date_partnership_end date NULL;<br>
2021-10-04 20:53:08 DEBUG Admin.lib::run_sql Request 224<br>
2021-10-04 20:53:08 DEBUG sql=ALTER TABLE khns_facture_fourn CHANGE COLUMN fk_mode_transport fk_transport_mode integer;<br>
2021-10-04 20:53:08 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_NOSUCHFIELD Unknown column 'fk_mode_transport' in 'khns_facture_fourn'<br>
2021-10-04 20:53:08 DEBUG Exit 0<br>
2021-10-04 20:53:08 DEBUG --- upgrade: end <br>
End of log output -->

</body>
</html>
<!DOCTYPE HTML>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Dolibarr installer">
<link rel="stylesheet" type="text/css" href="default.css">
<!-- Includes CSS for JQuery -->
<link rel="stylesheet" type="text/css" href="../includes/jquery/css/base/jquery-ui.min.css" />
<!-- Includes JS for JQuery -->
<script type="text/javascript" src="../includes/jquery/js/jquery.min.js"></script>
<script type="text/javascript" src="../includes/jquery/js/jquery-ui.min.js"></script>
<title>Dolibarr install or upgrade</title>
</head>
<body>
<div class="divlogoinstall" style="text-align:center"><img class="imglogoinstall" src="../theme/dolibarr_logo.svg" alt="Dolibarr logo" width="300px"><br>14.0.2</div><br><span class="titre">Dolibarr install or upgrade</span>
<form name="forminstall" style="width: 100%" action="step5.php?versionfrom=13.0.0&versionto=14.0.0" method="POST" autocomplete="off">
<input type="hidden" name="testpost" value="ok">
<input type="hidden" name="action" value="upgrade">
<table class="main" width="100%"><tr><td>
<table class="main-inside" width="100%"><tr><td>
<h3><img class="valignmiddle inline-block paddingright" src="../theme/common/octicons/build/svg/database.svg" width="20" alt="Database"> <span class="inline-block">Database migration (data)</span></h3><table border="0" width="100%"><tr class="trforrunsql"><td colspan="4"><b>Migration of import or export profiles (export)</b><br>
</td></tr><tr class="trforrunsql" style=""><td class="wordbreak" colspan="4">Nothing to do</td></tr>
<tr class="trforrunsql"><td colspan="4"><b>Migration of import or export profiles (import)</b><br>
</td></tr><tr class="trforrunsql" style=""><td class="wordbreak" colspan="4">Nothing to do</td></tr>
<tr class="trforrunsql"><td colspan="4"><b>Upgrade</b>: Reload module  Users & Groups<!-- (newboxdefonly) --><br>
</td></tr></table><table width="100%"><tr><td style="width: 30%">Migration finished</td><td class="right"><script type="text/javascript" language="javascript">
		jQuery(document).ready(function() {
			function init_trrunsql()
			{
				console.log("toggle .trforrunsql");
				jQuery(".trforrunsql").toggle();
			}
			init_trrunsql();
			jQuery(".trforrunsqlshowhide").click(function() {
				init_trrunsql();
			});
		});
		</script><a class="trforrunsqlshowhide" href="#">Show-Hide details</a></td></tr>
</table></td></tr></table>
</td></tr></table>
<!-- pFooter -->
<div class="nextbutton" id="nextbutton"><input type="submit" value="Next step ->"></div><input type="hidden" name="selectlang" value="auto"></form>

<!-- Start of log output
2021-10-04 20:53:10 DEBUG --- upgrade2: entering upgrade2.php page 13.0.0 14.0.0 <br>
2021-10-04 20:53:10 DEBUG DoliDBMysqli::connect host=db5005135846.hosting-data.io, port=3306, login=dbu1285995, passwd=--hidden--, name=<br>
2021-10-04 20:53:10 DEBUG DoliDBMysqli::select_db database=dbs4297934<br>
2021-10-04 20:53:10 DEBUG upgrade2: database connection successful :dbs4297934<br>
2021-10-04 20:53:10 INFO Conf::setValues<br>
2021-10-04 20:53:10 DEBUG sql=SELECT name as name, value as value, entity FROM khns_const WHERE entity IN (0,1) ORDER BY entity<br>
2021-10-04 20:53:10 DEBUG BEGIN Transaction<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_user ADD COLUMN birth date<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'birth'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_user ADD COLUMN dateemployment date<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'dateemployment'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_user ADD COLUMN dateemploymentend date<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'dateemploymentend'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_user ADD COLUMN default_range integer<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'default_range'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_user ADD COLUMN default_c_exp_tax_cat integer<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'default_c_exp_tax_cat'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_extrafields ADD COLUMN langs varchar(24)<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'langs'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_extrafields ADD COLUMN fieldcomputed text<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fieldcomputed'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_extrafields ADD COLUMN fielddefault varchar(255)<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'fielddefault'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_extrafields ADD COLUMN enabled varchar(255) DEFAULT '1'<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'enabled'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_extrafields ADD COLUMN help text<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'help'<br>
2021-10-04 20:53:10 DEBUG sql=ALTER TABLE khns_user_rights ADD COLUMN entity integer DEFAULT 1 NOT NULL<br>
2021-10-04 20:53:10 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_COLUMN_ALREADY_EXISTS Duplicate column name 'entity'<br>
2021-10-04 20:53:10 DEBUG sql=SELECT rowid, field, filter FROM khns_export_model WHERE type LIKE 'propale_%' OR type LIKE 'commande_%' OR type LIKE 'facture_%'<br>
2021-10-04 20:53:10 DEBUG sql=SELECT rowid, field FROM khns_import_model WHERE type LIKE 'propale_%' OR type LIKE 'commande_%' OR type LIKE 'facture_%'<br>
2021-10-04 20:53:10 DEBUG upgrade2::migrate_reload_modules force=0, listofmodule=MAIN_MODULE_ACCOUNTING,MAIN_MODULE_AGENDA,MAIN_MODULE_BOM,MAIN_MODULE_BANQUE,MAIN_MODULE_BARCODE,MAIN_MODULE_CRON,MAIN_MODULE_COMMANDE,MAIN_MODULE_BLOCKEDLOG,MAIN_MODULE_DEPLACEMENT,MAIN_MODULE_DON,MAIN_MODULE_ECM,MAIN_MODULE_EXTERNALSITE,MAIN_MODULE_EXPENSEREPORT,MAIN_MODULE_FACTURE,MAIN_MODULE_FOURNISSEUR,MAIN_MODULE_HOLIDAY,MAIN_MODULE_MARGIN,MAIN_MODULE_MRP,MAIN_MODULE_OPENSURVEY,MAIN_MODULE_PAYBOX,MAIN_MODULE_PRINTING,MAIN_MODULE_PRODUIT,MAIN_MODULE_RECRUITMENT,MAIN_MODULE_RESOURCE,MAIN_MODULE_SALARIES,MAIN_MODULE_SERVICE,MAIN_MODULE_SYSLOG,MAIN_MODULE_SOCIETE,MAIN_MODULE_STRIPE,MAIN_MODULE_TICKET,MAIN_MODULE_TAKEPOS,MAIN_MODULE_USER,MAIN_MODULE_VARIANTS,MAIN_MODULE_WEBSITE<br>
2021-10-04 20:53:10 DEBUG upgrade2::migrate_reload_modules Reactivate module User with mode newboxdefonly<br>
2021-10-04 20:53:10 DEBUG sql=SELECT name, label, type, param, fieldcomputed, fielddefault FROM khns_extrafields WHERE elementtype = 'user' AND type != 'separate' AND entity IN (0, 1) ORDER BY pos ASC<br>
2021-10-04 20:53:10 DEBUG sql=SELECT name, label, fieldrequired FROM khns_extrafields WHERE elementtype = 'user' AND entity IN (0,1)<br>
2021-10-04 20:53:10 DEBUG modUser::delete_menus<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_menu WHERE module = 'user' AND entity = 1<br>
2021-10-04 20:53:10 DEBUG modUser::_unactive<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_const WHERE name = 'MAIN_MODULE_USER' AND entity IN (0, 0)<br>
2021-10-04 20:53:10 DEBUG modUser::delete_tabs<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_const WHERE name like 'MAIN_MODULE_USER_TABS_%' AND entity = 1<br>
2021-10-04 20:53:10 DEBUG modUser::delete_cronjobs<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_cronjob WHERE module_name = 'user' AND entity = 1 AND test = '1'<br>
2021-10-04 20:53:10 DEBUG modUser::delete_permissions<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_rights_def WHERE module = 'user' AND entity = 1<br>
2021-10-04 20:53:10 DEBUG modUser::delete_menus<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_menu WHERE module = 'user' AND entity = 1<br>
2021-10-04 20:53:10 DEBUG modUser::delete_dirs<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_const WHERE name LIKE 'MAIN_MODULE_USER_DIR_%' AND entity = 1<br>
2021-10-04 20:53:10 DEBUG modUser::_active delete activation constant<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_const WHERE name = 'MAIN_MODULE_USER' AND entity IN (0, 0)<br>
2021-10-04 20:53:10 DEBUG modUser::_active insert activation constant<br>
2021-10-04 20:53:10 DEBUG sql=INSERT INTO khns_const (name, value, visible, entity, note) VALUES ('MAIN_MODULE_USER', '1', 0, 0, '{\"authorid\":0,\"ip\":\"2001:8d8:5c0:453:3128:0:1:2\"}')<br>
2021-10-04 20:53:10 DEBUG modUser::insert_boxes<br>
2021-10-04 20:53:10 DEBUG sql=SELECT count(*) as nb FROM khns_boxes_def WHERE file = 'box_lastlogin.php' AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=SELECT count(*) as nb FROM khns_boxes_def WHERE file = 'box_birthdays.php' AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=SELECT count(*) as nb FROM khns_boxes_def WHERE file = 'box_dolibarr_state_board.php' AND entity = 1<br>
2021-10-04 20:53:10 DEBUG modUser::insert_cronjobs<br>
2021-10-04 20:53:10 DEBUG modUser::insert_permissions<br>
2021-10-04 20:53:10 DEBUG sql=SELECT value as value FROM khns_const WHERE name = 'MAIN_MODULE_USER' AND entity IN (0,1)<br>
2021-10-04 20:53:10 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 251 AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (251,1,'Consulter les autres utilisateurs','user','r',0,'user','lire')<br>
2021-10-04 20:53:10 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:10 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:10 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:10 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:10 DEBUG sql=SELECT rowid, name, label, type, size, elementtype, fieldunique, fieldrequired, param, pos, alwayseditable, perms, langs, list, printable, totalizable, fielddefault, fieldcomputed, entity, enabled, help FROM khns_extrafields WHERE elementtype = 'user' ORDER BY pos<br>
2021-10-04 20:53:10 INFO User::addrights 251, , , 1<br>
2021-10-04 20:53:10 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 251 AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=251 OR (module='user' AND perms='user' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 251 AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 251)<br>
2021-10-04 20:53:10 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 252 AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (252,1,'Consulter les permissions des autres utilisateurs','user','r',0,'user_advance','readperms')<br>
2021-10-04 20:53:10 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:10 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:10 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:10 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:10 INFO User::addrights 252, , , 1<br>
2021-10-04 20:53:10 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 252 AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=252 OR (module='user' AND perms='user_advance' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:10 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 252 AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 252)<br>
2021-10-04 20:53:10 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 253 AND entity = 1<br>
2021-10-04 20:53:10 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (253,1,'Creer/modifier utilisateurs internes et externes','user','w',0,'user','creer')<br>
2021-10-04 20:53:10 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:10 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 253, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 253 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=253 OR (module='user' AND perms='user' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 251 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 251)<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 253 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 253)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 254 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (254,1,'Creer/modifier utilisateurs externes seulement','user','w',0,'user_advance','write')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 254, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 254 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=254 OR (module='user' AND perms='user_advance' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 254 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 254)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 255 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (255,1,'Modifier le mot de passe des autres utilisateurs','user','w',0,'user','password')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 255, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 255 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=255 OR (module='user' AND perms='user' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 251 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 251)<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 255 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 255)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 256 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (256,1,'Supprimer ou desactiver les autres utilisateurs','user','d',0,'user','supprimer')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 256, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 256 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=256 OR (module='user' AND perms='user' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 251 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 251)<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 256 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 256)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 341 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (341,1,'Consulter ses propres permissions','user','r',0,'self_advance','readperms')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 341, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 341 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=341 OR (module='user' AND perms='self_advance' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 341 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 341)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 342 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (342,1,'Creer/modifier ses propres infos utilisateur','user','w',0,'self','creer')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 342, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 342 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=342 OR (module='user' AND perms='self' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 342 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 342)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 343 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (343,1,'Modifier son propre mot de passe','user','w',0,'self','password')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 343, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 343 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=343 OR (module='user' AND perms='self' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 343 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 343)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 344 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (344,1,'Modifier ses propres permissions','user','w',0,'self_advance','writeperms')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 344, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 344 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=344 OR (module='user' AND perms='self_advance' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 344 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 344)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 351 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (351,1,'Consulter les groupes','user','r',0,'group_advance','read')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 351, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 351 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=351 OR (module='user' AND perms='group_advance' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 351 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 351)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 352 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (352,1,'Consulter les permissions des groupes','user','r',0,'group_advance','readperms')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 352, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 352 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=352 OR (module='user' AND perms='group_advance' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 351 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 351)<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 352 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 352)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 353 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (353,1,'Creer/modifier les groupes et leurs permissions','user','w',0,'group_advance','write')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 353, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 353 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=353 OR (module='user' AND perms='group_advance' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 351 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 351)<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 353 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 353)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 354 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (354,1,'Supprimer ou desactiver les groupes','user','d',0,'group_advance','delete')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 354, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 354 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=354 OR (module='user' AND perms='group_advance' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 351 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 351)<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 354 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 354)<br>
2021-10-04 20:53:11 DEBUG sql=SELECT count(*) as nb FROM khns_rights_def WHERE id = 358 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_rights_def (id, entity, libelle, module, type, bydefault, perms, subperms) VALUES (358,1,'Exporter les utilisateurs','user','r',0,'user','export')<br>
2021-10-04 20:53:11 DEBUG modUser::insert_permissions Search all admin users<br>
2021-10-04 20:53:11 DEBUG sql=SELECT rowid FROM khns_user WHERE admin = 1<br>
2021-10-04 20:53:11 INFO modUser::insert_permissions Add permission to user id=1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT u.rowid, u.lastname, u.firstname, u.employee, u.gender, u.civility as civility_code, u.birth, u.email, u.personal_email, u.job, u.socialnetworks, u.signature, u.office_phone, u.office_fax, u.user_mobile, u.personal_mobile, u.address, u.zip, u.town, u.fk_state as state_id, u.fk_country as country_id, u.admin, u.login, u.note as note_private, u.note_public, u.pass, u.pass_crypted, u.pass_temp, u.api_key, u.fk_soc, u.fk_socpeople, u.fk_member, u.fk_user, u.ldap_sid, u.fk_user_expense_validator, u.fk_user_holiday_validator, u.statut, u.lang, u.entity, u.datec as datec, u.tms as datem, u.datelastlogin as datel, u.datepreviouslogin as datep, u.datelastpassvalidation, u.datestartvalidity, u.dateendvalidity, u.photo as photo, u.openid as openid, u.accountancy_code, u.thm, u.tjm, u.salary, u.salaryextra, u.weeklyhours, u.color, u.dateemployment, u.dateemploymentend, u.fk_warehouse, u.ref_ext, u.default_range, u.default_c_exp_tax_cat, c.code as country_code, c.label as country, d.code_departement as state_code, d.nom as state FROM khns_user as u LEFT JOIN khns_c_country as c ON u.fk_country = c.rowid LEFT JOIN khns_c_departements as d ON u.fk_state = d.rowid WHERE u.entity IS NOT NULL AND u.rowid = 1 ORDER BY u.entity ASC<br>
2021-10-04 20:53:11 INFO User::addrights 358, , , 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT module, perms, subperms FROM khns_rights_def WHERE id = 358 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=SELECT id FROM khns_rights_def WHERE entity = 1 AND id=358 OR (module='user' AND perms='user' AND (subperms='lire' OR subperms='read'))<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 251 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 251)<br>
2021-10-04 20:53:11 DEBUG sql=DELETE FROM khns_user_rights WHERE fk_user = 1 AND fk_id = 358 AND entity = 1<br>
2021-10-04 20:53:11 DEBUG sql=INSERT INTO khns_user_rights (entity, fk_user, fk_id) VALUES (1, 1, 358)<br>
2021-10-04 20:53:11 INFO functions.lib::dol_mkdir: dir=/homepages/3/d340781634/htdocs/Khonos/documents/users/temp<br>
2021-10-04 20:53:11 DEBUG functions.lib::dol_mkdir: Directory '/homepages/3/d340781634/htdocs/Khonos/documents/users' does not exists or is outside open_basedir PHP setting.<br>
2021-10-04 20:53:11 DEBUG functions.lib::dol_mkdir: Directory '/homepages/3/d340781634/htdocs/Khonos/documents/users' created<br>
2021-10-04 20:53:11 DEBUG functions.lib::dol_mkdir: Directory '/homepages/3/d340781634/htdocs/Khonos/documents/users/temp' does not exists or is outside open_basedir PHP setting.<br>
2021-10-04 20:53:11 DEBUG functions.lib::dol_mkdir: Directory '/homepages/3/d340781634/htdocs/Khonos/documents/users/temp' created<br>
2021-10-04 20:53:11 DEBUG upgrade2::migrate_reload_menu<br>
2021-10-04 20:53:11 DEBUG sql=UPDATE khns_const SET VALUE = 'torefresh' WHERE name = 'MAIN_FIRST_PING_OK_ID'<br>
2021-10-04 20:53:11 DEBUG COMMIT Transaction<br>
2021-10-04 20:53:11 INFO files.lib.php::dolCopyDir srcfile=../install/medias destfile=/homepages/3/d340781634/htdocs/Khonos/documents/medias newmask=0 overwriteifexists=0<br>
2021-10-04 20:53:11 INFO functions.lib::dol_mkdir: dir=/homepages/3/d340781634/htdocs/Khonos/documents/medias<br>
2021-10-04 20:53:11 DEBUG functions.lib::dol_mkdir: Directory '/homepages/3/d340781634/htdocs/Khonos/documents/medias' does not exists or is outside open_basedir PHP setting.<br>
2021-10-04 20:53:11 DEBUG functions.lib::dol_mkdir: Directory '/homepages/3/d340781634/htdocs/Khonos/documents/medias' created<br>
2021-10-04 20:53:11 INFO files.lib.php::dol_copy srcfile=../install/medias/README.txt destfile=/homepages/3/d340781634/htdocs/Khonos/documents/medias/README.txt newmask=0 overwriteifexists=0<br>
2021-10-04 20:53:11 INFO files.lib.php::dol_copy srcfile=../install/medias/background_coder.jpg destfile=/homepages/3/d340781634/htdocs/Khonos/documents/medias/background_coder.jpg newmask=0 overwriteifexists=0<br>
2021-10-04 20:53:11 INFO files.lib.php::dol_copy srcfile=../install/medias/background_dolibarr.jpg destfile=/homepages/3/d340781634/htdocs/Khonos/documents/medias/background_dolibarr.jpg newmask=0 overwriteifexists=0<br>
2021-10-04 20:53:11 INFO files.lib.php::dol_copy srcfile=../install/medias/background_rough-horn.jpg destfile=/homepages/3/d340781634/htdocs/Khonos/documents/medias/background_rough-horn.jpg newmask=0 overwriteifexists=0<br>
2021-10-04 20:53:11 INFO files.lib.php::dol_copy srcfile=../install/medias/background_sunset.jpg destfile=/homepages/3/d340781634/htdocs/Khonos/documents/medias/background_sunset.jpg newmask=0 overwriteifexists=0<br>
2021-10-04 20:53:11 DEBUG upgrade2::migrate_delete_old_files<br>
2021-10-04 20:53:11 DEBUG upgrade2::migrate_delete_old_dir<br>
2021-10-04 20:53:11 INFO functions.lib::dol_mkdir: dir=/homepages/3/d340781634/htdocs/Khonos/documents/bank<br>
2021-10-04 20:53:11 DEBUG functions.lib::dol_mkdir: Directory '/homepages/3/d340781634/htdocs/Khonos/documents/bank' does not exists or is outside open_basedir PHP setting.<br>
2021-10-04 20:53:11 DEBUG functions.lib::dol_mkdir: Directory '/homepages/3/d340781634/htdocs/Khonos/documents/bank' created<br>
2021-10-04 20:53:11 DEBUG upgrade2::migrate_rename_directories<br>
2021-10-04 20:53:11 DEBUG Exit 0<br>
2021-10-04 20:53:11 DEBUG --- upgrade2: end<br>
End of log output -->

</body>
</html>
<!DOCTYPE HTML>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Dolibarr installer">
<link rel="stylesheet" type="text/css" href="default.css">
<!-- Includes CSS for JQuery -->
<link rel="stylesheet" type="text/css" href="../includes/jquery/css/base/jquery-ui.min.css" />
<!-- Includes JS for JQuery -->
<script type="text/javascript" src="../includes/jquery/js/jquery.min.js"></script>
<script type="text/javascript" src="../includes/jquery/js/jquery-ui.min.js"></script>
<title>Dolibarr install or upgrade</title>
</head>
<body>
<div class="divlogoinstall" style="text-align:center"><img class="imglogoinstall" src="../theme/dolibarr_logo.svg" alt="Dolibarr logo" width="300px"><br>14.0.2</div><br><span class="titre">Dolibarr install or upgrade - End of setup</span>
<form name="forminstall" style="width: 100%" action="step5.php" method="POST" autocomplete="off">
<input type="hidden" name="testpost" value="ok">
<input type="hidden" name="action" value="set">
<table class="main" width="100%"><tr><td>
<table class="main-inside" width="100%"><tr><td>
<br><img class="valignmiddle inline-block paddingright" src="../theme/common/octicons/build/svg/checklist.svg" width="20" alt="Configuration"> Dolibarr has been upgraded successfully.<br><br><div class="warning">Warning, for security reasons, once the install or upgrade is complete, you should add a file called <b>install.lock</b> into the Dolibarr document directory in order to prevent the accidental/malicious use of the install tools again.</div><br></td></tr></table>
</td></tr></table>
<!-- pFooter -->
<br><div class="center"><a href="../index.php?mainmenu=home&username="><span class="fas fa-link-alt"></span> Go to Dolibarr...</a></div><br><input type="hidden" name="selectlang" value="auto"></form>

<!-- Start of log output
2021-10-04 20:53:13 DEBUG - step5: entering step5.php page<br>
2021-10-04 20:53:13 DEBUG DoliDBMysqli::connect host=db5005135846.hosting-data.io, port=3306, login=dbu1285995, passwd=--hidden--, name=<br>
2021-10-04 20:53:13 DEBUG DoliDBMysqli::select_db database=dbs4297934<br>
2021-10-04 20:53:13 INFO Conf::setValues<br>
2021-10-04 20:53:13 DEBUG sql=SELECT name as name, value as value, entity FROM khns_const WHERE entity IN (0,1) ORDER BY entity<br>
2021-10-04 20:53:13 DEBUG step5: set MAIN_VERSION_LAST_UPGRADE const to value 14.0.2<br>
2021-10-04 20:53:13 DEBUG sql=DELETE FROM khns_const WHERE name='MAIN_VERSION_LAST_UPGRADE'<br>
2021-10-04 20:53:13 DEBUG sql=INSERT INTO khns_const(name,value,type,visible,note,entity) VALUES ('MAIN_VERSION_LAST_UPGRADE','14.0.2','chaine',0,'Dolibarr version for last upgrade',0)<br>
2021-10-04 20:53:13 DEBUG sql=INSERT INTO khns_const(name,value,type,visible,note,entity) VALUES ('MAIN_LANG_DEFAULT','auto','chaine',0,'Default language',1)<br>
2021-10-04 20:53:13 ERR DoliDBMysqli::query SQL Error message: DB_ERROR_RECORD_ALREADY_EXISTS Duplicate entry 'MAIN_LANG_DEFAULT-1' for key 'uk_const'<br>
2021-10-04 20:53:13 DEBUG Exit 0<br>
2021-10-04 20:53:13 DEBUG - step5: Dolibarr setup finished<br>
End of log output -->

</body>
</html>
